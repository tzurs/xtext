/*
 * generated by Xtext
 */
grammar PsiInternalXtextGrammarTestLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.idea.lang.XtextGrammarTestLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.services.XtextGrammarTestLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected XtextGrammarTestLanguageGrammarAccess grammarAccess;

	protected XtextGrammarTestLanguageElementTypeProvider elementTypeProvider;

	public PsiInternalXtextGrammarTestLanguageParser(PsiBuilder builder, TokenStream input, XtextGrammarTestLanguageElementTypeProvider elementTypeProvider, XtextGrammarTestLanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Grammar";
	}

}

//Entry rule entryRuleGrammar
entryRuleGrammar:
	{ markComposite(elementTypeProvider.getGrammarElementType()); }
	ruleGrammar
	EOF;

// Rule Grammar
ruleGrammar:
	(
		{
			markLeaf(elementTypeProvider.getGrammar_GrammarKeyword_0ElementType());
		}
		otherlv_0='grammar'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getGrammar_NameGrammarIDParserRuleCall_1_0ElementType());
				}
				lv_name_1_0=ruleGrammarID
				{
					doneComposite();
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getGrammar_WithKeyword_2_0ElementType());
			}
			otherlv_2='with'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getGrammar_UsedGrammarsGrammarCrossReference_2_1_0ElementType());
					}
					ruleGrammarID
					{
						doneComposite();
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getGrammar_CommaKeyword_2_2_0ElementType());
				}
				otherlv_4=','
				{
					doneLeaf(otherlv_4);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getGrammar_UsedGrammarsGrammarCrossReference_2_2_1_0ElementType());
						}
						ruleGrammarID
						{
							doneComposite();
						}
					)
				)
			)*
		)?
		(
			{
				markComposite(elementTypeProvider.getGrammar_HiddenClauseParserRuleCall_3ElementType());
			}
			ruleHiddenClause
			{
				doneComposite();
			}
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getGrammar_MetamodelDeclarationsAbstractMetamodelDeclarationParserRuleCall_4_0ElementType());
				}
				lv_metamodelDeclarations_7_0=ruleAbstractMetamodelDeclaration
				{
					doneComposite();
				}
			)
		)*
		(
			(
				{
					markComposite(elementTypeProvider.getGrammar_RulesAbstractRuleParserRuleCall_5_0ElementType());
				}
				lv_rules_8_0=ruleAbstractRule
				{
					doneComposite();
				}
			)
		)+
	)
;


// Rule HiddenClause
ruleHiddenClause:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getHiddenClause_DefinesHiddenTokensHiddenKeyword_0_0ElementType());
				}
				lv_definesHiddenTokens_0_0='hidden'
				{
					doneLeaf(lv_definesHiddenTokens_0_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getHiddenClause_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getHiddenClause_HiddenTokensAbstractRuleCrossReference_2_0_0ElementType());
					}
					otherlv_2=RULE_ID
					{
						doneLeaf(otherlv_2);
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getHiddenClause_CommaKeyword_2_1_0ElementType());
				}
				otherlv_3=','
				{
					doneLeaf(otherlv_3);
				}
				(
					(
						{
							markLeaf(elementTypeProvider.getHiddenClause_HiddenTokensAbstractRuleCrossReference_2_1_1_0ElementType());
						}
						otherlv_4=RULE_ID
						{
							doneLeaf(otherlv_4);
						}
					)
				)
			)*
		)?
		{
			markLeaf(elementTypeProvider.getHiddenClause_RightParenthesisKeyword_3ElementType());
		}
		otherlv_5=')'
		{
			doneLeaf(otherlv_5);
		}
	)
;

//Entry rule entryRuleGrammarID
entryRuleGrammarID:
	{ markComposite(elementTypeProvider.getGrammarIDElementType()); }
	ruleGrammarID
	EOF;

// Rule GrammarID
ruleGrammarID:
	(
		{
			markLeaf(elementTypeProvider.getGrammarID_IDTerminalRuleCall_0ElementType());
		}
		this_ID_0=RULE_ID
		{
			doneLeaf(this_ID_0);
		}
		(
			{
				markLeaf(elementTypeProvider.getGrammarID_FullStopKeyword_1_0ElementType());
			}
			kw='.'
			{
				doneLeaf(kw);
			}
			{
				markLeaf(elementTypeProvider.getGrammarID_IDTerminalRuleCall_1_1ElementType());
			}
			this_ID_2=RULE_ID
			{
				doneLeaf(this_ID_2);
			}
		)*
	)
;

//Entry rule entryRuleAbstractRule
entryRuleAbstractRule:
	{ markComposite(elementTypeProvider.getAbstractRuleElementType()); }
	ruleAbstractRule
	EOF;

// Rule AbstractRule
ruleAbstractRule:
	(
		{
			markComposite(elementTypeProvider.getAbstractRule_ParserRuleParserRuleCall_0ElementType());
		}
		ruleParserRule
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractRule_TerminalRuleParserRuleCall_1ElementType());
		}
		ruleTerminalRule
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractRule_EnumRuleParserRuleCall_2ElementType());
		}
		ruleEnumRule
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleAbstractMetamodelDeclaration
entryRuleAbstractMetamodelDeclaration:
	{ markComposite(elementTypeProvider.getAbstractMetamodelDeclarationElementType()); }
	ruleAbstractMetamodelDeclaration
	EOF;

// Rule AbstractMetamodelDeclaration
ruleAbstractMetamodelDeclaration:
	(
		{
			markComposite(elementTypeProvider.getAbstractMetamodelDeclaration_GeneratedMetamodelParserRuleCall_0ElementType());
		}
		ruleGeneratedMetamodel
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractMetamodelDeclaration_ReferencedMetamodelParserRuleCall_1ElementType());
		}
		ruleReferencedMetamodel
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleGeneratedMetamodel
entryRuleGeneratedMetamodel:
	{ markComposite(elementTypeProvider.getGeneratedMetamodelElementType()); }
	ruleGeneratedMetamodel
	EOF;

// Rule GeneratedMetamodel
ruleGeneratedMetamodel:
	(
		{
			markLeaf(elementTypeProvider.getGeneratedMetamodel_GenerateKeyword_0ElementType());
		}
		otherlv_0='generate'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getGeneratedMetamodel_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getGeneratedMetamodel_EPackageEPackageCrossReference_2_0ElementType());
				}
				otherlv_2=RULE_STRING
				{
					doneLeaf(otherlv_2);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getGeneratedMetamodel_AsKeyword_3_0ElementType());
			}
			otherlv_3='as'
			{
				doneLeaf(otherlv_3);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getGeneratedMetamodel_AliasIDTerminalRuleCall_3_1_0ElementType());
					}
					lv_alias_4_0=RULE_ID
					{
						doneLeaf(lv_alias_4_0);
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleReferencedMetamodel
entryRuleReferencedMetamodel:
	{ markComposite(elementTypeProvider.getReferencedMetamodelElementType()); }
	ruleReferencedMetamodel
	EOF;

// Rule ReferencedMetamodel
ruleReferencedMetamodel:
	(
		{
			markLeaf(elementTypeProvider.getReferencedMetamodel_ImportKeyword_0ElementType());
		}
		otherlv_0='import'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getReferencedMetamodel_EPackageEPackageCrossReference_1_0ElementType());
				}
				otherlv_1=RULE_STRING
				{
					doneLeaf(otherlv_1);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getReferencedMetamodel_AsKeyword_2_0ElementType());
			}
			otherlv_2='as'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getReferencedMetamodel_AliasIDTerminalRuleCall_2_1_0ElementType());
					}
					lv_alias_3_0=RULE_ID
					{
						doneLeaf(lv_alias_3_0);
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleParserRule
entryRuleParserRule:
	{ markComposite(elementTypeProvider.getParserRuleElementType()); }
	ruleParserRule
	EOF;

// Rule ParserRule
ruleParserRule:
	(
		(
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getParserRule_FragmentFragmentKeyword_0_0_0_0ElementType());
						}
						lv_fragment_0_0='fragment'
						{
							doneLeaf(lv_fragment_0_0);
						}
					)
				)
				{
					markComposite(elementTypeProvider.getParserRule_RuleNameAndParamsParserRuleCall_0_0_1ElementType());
				}
				ruleRuleNameAndParams
				{
					doneComposite();
				}
				(
					(
						(
							{
								markLeaf(elementTypeProvider.getParserRule_WildcardAsteriskKeyword_0_0_2_0_0ElementType());
							}
							lv_wildcard_2_0='*'
							{
								doneLeaf(lv_wildcard_2_0);
							}
						)
					)
					    |
					(
						{
							markComposite(elementTypeProvider.getParserRule_ReturnsClauseParserRuleCall_0_0_2_1ElementType());
						}
						ruleReturnsClause
						{
							doneComposite();
						}
					)?
				)
			)
			    |
			(
				{
					markComposite(elementTypeProvider.getParserRule_RuleNameAndParamsParserRuleCall_0_1_0ElementType());
				}
				ruleRuleNameAndParams
				{
					doneComposite();
				}
				(
					{
						markComposite(elementTypeProvider.getParserRule_ReturnsClauseParserRuleCall_0_1_1ElementType());
					}
					ruleReturnsClause
					{
						doneComposite();
					}
				)?
			)
		)
		(
			{
				markComposite(elementTypeProvider.getParserRule_HiddenClauseParserRuleCall_1ElementType());
			}
			ruleHiddenClause
			{
				doneComposite();
			}
		)?
		{
			markLeaf(elementTypeProvider.getParserRule_ColonKeyword_2ElementType());
		}
		otherlv_7=':'
		{
			doneLeaf(otherlv_7);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getParserRule_AlternativesAlternativesParserRuleCall_3_0ElementType());
				}
				lv_alternatives_8_0=ruleAlternatives
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getParserRule_SemicolonKeyword_4ElementType());
		}
		otherlv_9=';'
		{
			doneLeaf(otherlv_9);
		}
	)
;


// Rule RuleNameAndParams
ruleRuleNameAndParams:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getRuleNameAndParams_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getRuleNameAndParams_LeftSquareBracketKeyword_1_0ElementType());
			}
			otherlv_1='['
			{
				doneLeaf(otherlv_1);
			}
			(
				(
					(
						{
							markComposite(elementTypeProvider.getRuleNameAndParams_ParametersParameterParserRuleCall_1_1_0_0ElementType());
						}
						lv_parameters_2_0=ruleParameter
						{
							doneComposite();
						}
					)
				)
				(
					{
						markLeaf(elementTypeProvider.getRuleNameAndParams_CommaKeyword_1_1_1_0ElementType());
					}
					otherlv_3=','
					{
						doneLeaf(otherlv_3);
					}
					(
						(
							{
								markComposite(elementTypeProvider.getRuleNameAndParams_ParametersParameterParserRuleCall_1_1_1_1_0ElementType());
							}
							lv_parameters_4_0=ruleParameter
							{
								doneComposite();
							}
						)
					)
				)*
			)?
			{
				markLeaf(elementTypeProvider.getRuleNameAndParams_RightSquareBracketKeyword_1_2ElementType());
			}
			otherlv_5=']'
			{
				doneLeaf(otherlv_5);
			}
		)?
	)
;


// Rule ReturnsClause
ruleReturnsClause:
	(
		{
			markLeaf(elementTypeProvider.getReturnsClause_ReturnsKeyword_0ElementType());
		}
		otherlv_0='returns'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getReturnsClause_TypeTypeRefParserRuleCall_1_0ElementType());
				}
				lv_type_1_0=ruleTypeRef
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleParameter
entryRuleParameter:
	{ markComposite(elementTypeProvider.getParameterElementType()); }
	ruleParameter
	EOF;

// Rule Parameter
ruleParameter:
	(
		(
			{
				markLeaf(elementTypeProvider.getParameter_NameIDTerminalRuleCall_0ElementType());
			}
			lv_name_0_0=RULE_ID
			{
				doneLeaf(lv_name_0_0);
			}
		)
	)
;

//Entry rule entryRuleTypeRef
entryRuleTypeRef:
	{ markComposite(elementTypeProvider.getTypeRefElementType()); }
	ruleTypeRef
	EOF;

// Rule TypeRef
ruleTypeRef:
	(
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getTypeRef_MetamodelAbstractMetamodelDeclarationCrossReference_0_0_0ElementType());
					}
					otherlv_0=RULE_ID
					{
						doneLeaf(otherlv_0);
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getTypeRef_ColonColonKeyword_0_1ElementType());
			}
			otherlv_1='::'
			{
				doneLeaf(otherlv_1);
			}
		)?
		(
			(
				{
					markLeaf(elementTypeProvider.getTypeRef_ClassifierEClassifierCrossReference_1_0ElementType());
				}
				otherlv_2=RULE_ID
				{
					doneLeaf(otherlv_2);
				}
			)
		)
	)
;

//Entry rule entryRuleAlternatives
entryRuleAlternatives:
	{ markComposite(elementTypeProvider.getAlternativesElementType()); }
	ruleAlternatives
	EOF;

// Rule Alternatives
ruleAlternatives:
	(
		{
			markComposite(elementTypeProvider.getAlternatives_ConditionalBranchParserRuleCall_0ElementType());
		}
		ruleConditionalBranch
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getAlternatives_AlternativesElementsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getAlternatives_VerticalLineKeyword_1_1_0ElementType());
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getAlternatives_ElementsConditionalBranchParserRuleCall_1_1_1_0ElementType());
						}
						lv_elements_3_0=ruleConditionalBranch
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleConditionalBranch
entryRuleConditionalBranch:
	{ markComposite(elementTypeProvider.getConditionalBranchElementType()); }
	ruleConditionalBranch
	EOF;

// Rule ConditionalBranch
ruleConditionalBranch:
	(
		{
			markComposite(elementTypeProvider.getConditionalBranch_UnorderedGroupParserRuleCall_0ElementType());
		}
		ruleUnorderedGroup
		{
			doneComposite();
		}
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getConditionalBranch_ConditionalBranchAction_1_0ElementType());
					doneComposite();
				}
			)
			{
				markLeaf(elementTypeProvider.getConditionalBranch_LeftSquareBracketKeyword_1_1ElementType());
			}
			otherlv_2='['
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getConditionalBranch_FilteredInverseLiteralValueParserRuleCall_1_2_0ElementType());
					}
					lv_filtered_3_0=ruleInverseLiteralValue
					{
						doneComposite();
					}
				)
			)
			(
				(
					{
						markLeaf(elementTypeProvider.getConditionalBranch_ParameterParameterCrossReference_1_3_0ElementType());
					}
					otherlv_4=RULE_ID
					{
						doneLeaf(otherlv_4);
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getConditionalBranch_RightSquareBracketKeyword_1_4ElementType());
			}
			otherlv_5=']'
			{
				doneLeaf(otherlv_5);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getConditionalBranch_GuardedElementUnorderedGroupParserRuleCall_1_5_0ElementType());
					}
					lv_guardedElement_6_0=ruleUnorderedGroup
					{
						doneComposite();
					}
				)
			)
		)
	)
;

//Entry rule entryRuleUnorderedGroup
entryRuleUnorderedGroup:
	{ markComposite(elementTypeProvider.getUnorderedGroupElementType()); }
	ruleUnorderedGroup
	EOF;

// Rule UnorderedGroup
ruleUnorderedGroup:
	(
		{
			markComposite(elementTypeProvider.getUnorderedGroup_GroupParserRuleCall_0ElementType());
		}
		ruleGroup
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getUnorderedGroup_UnorderedGroupElementsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getUnorderedGroup_AmpersandKeyword_1_1_0ElementType());
				}
				otherlv_2='&'
				{
					doneLeaf(otherlv_2);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getUnorderedGroup_ElementsGroupParserRuleCall_1_1_1_0ElementType());
						}
						lv_elements_3_0=ruleGroup
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleGroup
entryRuleGroup:
	{ markComposite(elementTypeProvider.getGroupElementType()); }
	ruleGroup
	EOF;

// Rule Group
ruleGroup:
	(
		{
			markComposite(elementTypeProvider.getGroup_AbstractTokenParserRuleCall_0ElementType());
		}
		ruleAbstractToken
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getGroup_GroupElementsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getGroup_ElementsAbstractTokenParserRuleCall_1_1_0ElementType());
					}
					lv_elements_2_0=ruleAbstractToken
					{
						doneComposite();
					}
				)
			)+
		)?
	)
;

//Entry rule entryRuleAbstractToken
entryRuleAbstractToken:
	{ markComposite(elementTypeProvider.getAbstractTokenElementType()); }
	ruleAbstractToken
	EOF;

// Rule AbstractToken
ruleAbstractToken:
	(
		{
			markComposite(elementTypeProvider.getAbstractToken_AbstractTokenWithCardinalityParserRuleCall_0ElementType());
		}
		ruleAbstractTokenWithCardinality
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractToken_ActionParserRuleCall_1ElementType());
		}
		ruleAction
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleAbstractTokenWithCardinality
entryRuleAbstractTokenWithCardinality:
	{ markComposite(elementTypeProvider.getAbstractTokenWithCardinalityElementType()); }
	ruleAbstractTokenWithCardinality
	EOF;

// Rule AbstractTokenWithCardinality
ruleAbstractTokenWithCardinality:
	(
		(
			{
				markComposite(elementTypeProvider.getAbstractTokenWithCardinality_AssignmentParserRuleCall_0_0ElementType());
			}
			ruleAssignment
			{
				doneComposite();
			}
			    |
			{
				markComposite(elementTypeProvider.getAbstractTokenWithCardinality_AbstractTerminalParserRuleCall_0_1ElementType());
			}
			ruleAbstractTerminal
			{
				doneComposite();
			}
		)
		(
			{
				markComposite(elementTypeProvider.getAbstractTokenWithCardinality_CardinalitiesParserRuleCall_1ElementType());
			}
			ruleCardinalities
			{
				doneComposite();
			}
		)?
	)
;


// Rule Cardinalities
ruleCardinalities:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getCardinalities_CardinalityQuestionMarkKeyword_0_0ElementType());
				}
				lv_cardinality_0_1='?'
				{
					doneLeaf(lv_cardinality_0_1);
				}
				    |
				{
					markLeaf(elementTypeProvider.getCardinalities_CardinalityAsteriskKeyword_0_1ElementType());
				}
				lv_cardinality_0_2='*'
				{
					doneLeaf(lv_cardinality_0_2);
				}
				    |
				{
					markLeaf(elementTypeProvider.getCardinalities_CardinalityPlusSignKeyword_0_2ElementType());
				}
				lv_cardinality_0_3='+'
				{
					doneLeaf(lv_cardinality_0_3);
				}
			)
		)
	)
;

//Entry rule entryRuleAction
entryRuleAction:
	{ markComposite(elementTypeProvider.getActionElementType()); }
	ruleAction
	EOF;

// Rule Action
ruleAction:
	(
		{
			markLeaf(elementTypeProvider.getAction_LeftCurlyBracketKeyword_0ElementType());
		}
		otherlv_0='{'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getAction_TypeTypeRefParserRuleCall_1_0ElementType());
				}
				lv_type_1_0=ruleTypeRef
				{
					doneComposite();
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getAction_FullStopKeyword_2_0ElementType());
			}
			otherlv_2='.'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getAction_FeatureIDTerminalRuleCall_2_1_0ElementType());
					}
					lv_feature_3_0=RULE_ID
					{
						doneLeaf(lv_feature_3_0);
					}
				)
			)
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getAction_OperatorEqualsSignKeyword_2_2_0_0ElementType());
						}
						lv_operator_4_1='='
						{
							doneLeaf(lv_operator_4_1);
						}
						    |
						{
							markLeaf(elementTypeProvider.getAction_OperatorPlusSignEqualsSignKeyword_2_2_0_1ElementType());
						}
						lv_operator_4_2='+='
						{
							doneLeaf(lv_operator_4_2);
						}
					)
				)
			)
			{
				markLeaf(elementTypeProvider.getAction_CurrentKeyword_2_3ElementType());
			}
			otherlv_5='current'
			{
				doneLeaf(otherlv_5);
			}
		)?
		{
			markLeaf(elementTypeProvider.getAction_RightCurlyBracketKeyword_3ElementType());
		}
		otherlv_6='}'
		{
			doneLeaf(otherlv_6);
		}
	)
;

//Entry rule entryRuleAbstractTerminal
entryRuleAbstractTerminal:
	{ markComposite(elementTypeProvider.getAbstractTerminalElementType()); }
	ruleAbstractTerminal
	EOF;

// Rule AbstractTerminal
ruleAbstractTerminal:
	(
		{
			markComposite(elementTypeProvider.getAbstractTerminal_KeywordParserRuleCall_0ElementType());
		}
		ruleKeyword
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractTerminal_RuleCallParserRuleCall_1ElementType());
		}
		ruleRuleCall
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractTerminal_ParenthesizedElementParserRuleCall_2ElementType());
		}
		ruleParenthesizedElement
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractTerminal_PredicatedKeywordParserRuleCall_3ElementType());
		}
		rulePredicatedKeyword
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractTerminal_PredicatedRuleCallParserRuleCall_4ElementType());
		}
		rulePredicatedRuleCall
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractTerminal_PredicatedGroupParserRuleCall_5ElementType());
		}
		rulePredicatedGroup
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleKeyword
entryRuleKeyword:
	{ markComposite(elementTypeProvider.getKeywordElementType()); }
	ruleKeyword
	EOF;

// Rule Keyword
ruleKeyword:
	(
		(
			{
				markLeaf(elementTypeProvider.getKeyword_ValueSTRINGTerminalRuleCall_0ElementType());
			}
			lv_value_0_0=RULE_STRING
			{
				doneLeaf(lv_value_0_0);
			}
		)
	)
;

//Entry rule entryRuleRuleCall
entryRuleRuleCall:
	{ markComposite(elementTypeProvider.getRuleCallElementType()); }
	ruleRuleCall
	EOF;

// Rule RuleCall
ruleRuleCall:
	(
		(
			{
				precedeComposite(elementTypeProvider.getRuleCall_RuleCallAction_0ElementType());
				doneComposite();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getRuleCall_RuleAbstractRuleCrossReference_1_0ElementType());
				}
				ruleRuleID
				{
					doneComposite();
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getRuleCall_LeftSquareBracketKeyword_2_0ElementType());
			}
			otherlv_2='['
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getRuleCall_ArgumentsNamedArgumentParserRuleCall_2_1_0ElementType());
					}
					lv_arguments_3_0=ruleNamedArgument
					{
						doneComposite();
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getRuleCall_CommaKeyword_2_2_0ElementType());
				}
				otherlv_4=','
				{
					doneLeaf(otherlv_4);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getRuleCall_ArgumentsNamedArgumentParserRuleCall_2_2_1_0ElementType());
						}
						lv_arguments_5_0=ruleNamedArgument
						{
							doneComposite();
						}
					)
				)
			)*
			{
				markLeaf(elementTypeProvider.getRuleCall_RightSquareBracketKeyword_2_3ElementType());
			}
			otherlv_6=']'
			{
				doneLeaf(otherlv_6);
			}
		)?
	)
;

//Entry rule entryRuleLiteralValue
entryRuleLiteralValue:
	{ markComposite(elementTypeProvider.getLiteralValueElementType()); }
	ruleLiteralValue
	EOF;

// Rule LiteralValue
ruleLiteralValue:
	(
		{
			markLeaf(elementTypeProvider.getLiteralValue_ExclamationMarkKeyword_0ElementType());
		}
		kw='!'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getLiteralValue_PlusSignKeyword_1ElementType());
		}
		kw='+'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRuleInverseLiteralValue
entryRuleInverseLiteralValue:
	{ markComposite(elementTypeProvider.getInverseLiteralValueElementType()); }
	ruleInverseLiteralValue
	EOF;

// Rule InverseLiteralValue
ruleInverseLiteralValue:
	{
		markComposite(elementTypeProvider.getInverseLiteralValue_LiteralValueParserRuleCallElementType());
	}
	ruleLiteralValue
	{
		doneComposite();
	}
;

//Entry rule entryRuleNamedArgument
entryRuleNamedArgument:
	{ markComposite(elementTypeProvider.getNamedArgumentElementType()); }
	ruleNamedArgument
	EOF;

// Rule NamedArgument
ruleNamedArgument:
	(
		(
			{
				precedeComposite(elementTypeProvider.getNamedArgument_NamedArgumentAction_0ElementType());
				doneComposite();
			}
		)
		(
			(
				(
					(
						{
							markComposite(elementTypeProvider.getNamedArgument_LiteralValueLiteralValueParserRuleCall_1_0_0_0ElementType());
						}
						lv_literalValue_1_0=ruleLiteralValue
						{
							doneComposite();
						}
					)
				)?
				(
					(
						{
							markLeaf(elementTypeProvider.getNamedArgument_ParameterParameterCrossReference_1_0_1_0ElementType());
						}
						otherlv_2=RULE_ID
						{
							doneLeaf(otherlv_2);
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getNamedArgument_ParameterParameterCrossReference_1_1_0_0ElementType());
						}
						otherlv_3=RULE_ID
						{
							doneLeaf(otherlv_3);
						}
					)
				)
				{
					markLeaf(elementTypeProvider.getNamedArgument_EqualsSignKeyword_1_1_1ElementType());
				}
				otherlv_4='='
				{
					doneLeaf(otherlv_4);
				}
				(
					(
						{
							markLeaf(elementTypeProvider.getNamedArgument_ValueParameterCrossReference_1_1_2_0ElementType());
						}
						otherlv_5=RULE_ID
						{
							doneLeaf(otherlv_5);
						}
					)
				)
			)
		)
	)
;

//Entry rule entryRuleTerminalRuleCall
entryRuleTerminalRuleCall:
	{ markComposite(elementTypeProvider.getTerminalRuleCallElementType()); }
	ruleTerminalRuleCall
	EOF;

// Rule TerminalRuleCall
ruleTerminalRuleCall:
	(
		(
			{
				markComposite(elementTypeProvider.getTerminalRuleCall_RuleAbstractRuleCrossReference_0ElementType());
			}
			ruleRuleID
			{
				doneComposite();
			}
		)
	)
;

//Entry rule entryRuleRuleID
entryRuleRuleID:
	{ markComposite(elementTypeProvider.getRuleIDElementType()); }
	ruleRuleID
	EOF;

// Rule RuleID
ruleRuleID:
	(
		{
			markLeaf(elementTypeProvider.getRuleID_IDTerminalRuleCall_0ElementType());
		}
		this_ID_0=RULE_ID
		{
			doneLeaf(this_ID_0);
		}
		(
			{
				markLeaf(elementTypeProvider.getRuleID_ColonColonKeyword_1_0ElementType());
			}
			kw='::'
			{
				doneLeaf(kw);
			}
			{
				markLeaf(elementTypeProvider.getRuleID_IDTerminalRuleCall_1_1ElementType());
			}
			this_ID_2=RULE_ID
			{
				doneLeaf(this_ID_2);
			}
		)*
	)
;

//Entry rule entryRulePredicatedKeyword
entryRulePredicatedKeyword:
	{ markComposite(elementTypeProvider.getPredicatedKeywordElementType()); }
	rulePredicatedKeyword
	EOF;

// Rule PredicatedKeyword
rulePredicatedKeyword:
	(
		{
			markComposite(elementTypeProvider.getPredicatedKeyword_PredicateParserRuleCall_0ElementType());
		}
		rulePredicate
		{
			doneComposite();
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getPredicatedKeyword_ValueSTRINGTerminalRuleCall_1_0ElementType());
				}
				lv_value_1_0=RULE_STRING
				{
					doneLeaf(lv_value_1_0);
				}
			)
		)
	)
;

//Entry rule entryRulePredicatedRuleCall
entryRulePredicatedRuleCall:
	{ markComposite(elementTypeProvider.getPredicatedRuleCallElementType()); }
	rulePredicatedRuleCall
	EOF;

// Rule PredicatedRuleCall
rulePredicatedRuleCall:
	(
		{
			markComposite(elementTypeProvider.getPredicatedRuleCall_PredicateParserRuleCall_0ElementType());
		}
		rulePredicate
		{
			doneComposite();
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getPredicatedRuleCall_RuleAbstractRuleCrossReference_1_0ElementType());
				}
				otherlv_1=RULE_ID
				{
					doneLeaf(otherlv_1);
				}
			)
		)
	)
;

//Entry rule entryRuleAssignment
entryRuleAssignment:
	{ markComposite(elementTypeProvider.getAssignmentElementType()); }
	ruleAssignment
	EOF;

// Rule Assignment
ruleAssignment:
	(
		(
			{
				markComposite(elementTypeProvider.getAssignment_PredicateParserRuleCall_0ElementType());
			}
			rulePredicate
			{
				doneComposite();
			}
		)?
		(
			(
				{
					markLeaf(elementTypeProvider.getAssignment_FeatureIDTerminalRuleCall_1_0ElementType());
				}
				lv_feature_1_0=RULE_ID
				{
					doneLeaf(lv_feature_1_0);
				}
			)
		)
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getAssignment_OperatorPlusSignEqualsSignKeyword_2_0_0ElementType());
					}
					lv_operator_2_1='+='
					{
						doneLeaf(lv_operator_2_1);
					}
					    |
					{
						markLeaf(elementTypeProvider.getAssignment_OperatorEqualsSignKeyword_2_0_1ElementType());
					}
					lv_operator_2_2='='
					{
						doneLeaf(lv_operator_2_2);
					}
					    |
					{
						markLeaf(elementTypeProvider.getAssignment_OperatorQuestionMarkEqualsSignKeyword_2_0_2ElementType());
					}
					lv_operator_2_3='?='
					{
						doneLeaf(lv_operator_2_3);
					}
				)
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getAssignment_TerminalAssignableTerminalParserRuleCall_3_0ElementType());
				}
				lv_terminal_3_0=ruleAssignableTerminal
				{
					doneComposite();
				}
			)
		)
	)
;


// Rule Predicate
rulePredicate:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getPredicate_PredicatedEqualsSignGreaterThanSignKeyword_0_0ElementType());
				}
				lv_predicated_0_0='=>'
				{
					doneLeaf(lv_predicated_0_0);
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getPredicate_FirstSetPredicatedHyphenMinusGreaterThanSignKeyword_1_0ElementType());
				}
				lv_firstSetPredicated_1_0='->'
				{
					doneLeaf(lv_firstSetPredicated_1_0);
				}
			)
		)
	)
;

//Entry rule entryRuleAssignableTerminal
entryRuleAssignableTerminal:
	{ markComposite(elementTypeProvider.getAssignableTerminalElementType()); }
	ruleAssignableTerminal
	EOF;

// Rule AssignableTerminal
ruleAssignableTerminal:
	(
		{
			markComposite(elementTypeProvider.getAssignableTerminal_KeywordParserRuleCall_0ElementType());
		}
		ruleKeyword
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAssignableTerminal_RuleCallParserRuleCall_1ElementType());
		}
		ruleRuleCall
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAssignableTerminal_ParenthesizedAssignableElementParserRuleCall_2ElementType());
		}
		ruleParenthesizedAssignableElement
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAssignableTerminal_CrossReferenceParserRuleCall_3ElementType());
		}
		ruleCrossReference
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleParenthesizedAssignableElement
entryRuleParenthesizedAssignableElement:
	{ markComposite(elementTypeProvider.getParenthesizedAssignableElementElementType()); }
	ruleParenthesizedAssignableElement
	EOF;

// Rule ParenthesizedAssignableElement
ruleParenthesizedAssignableElement:
	(
		{
			markLeaf(elementTypeProvider.getParenthesizedAssignableElement_LeftParenthesisKeyword_0ElementType());
		}
		otherlv_0='('
		{
			doneLeaf(otherlv_0);
		}
		{
			markComposite(elementTypeProvider.getParenthesizedAssignableElement_AssignableAlternativesParserRuleCall_1ElementType());
		}
		ruleAssignableAlternatives
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getParenthesizedAssignableElement_RightParenthesisKeyword_2ElementType());
		}
		otherlv_2=')'
		{
			doneLeaf(otherlv_2);
		}
	)
;

//Entry rule entryRuleAssignableAlternatives
entryRuleAssignableAlternatives:
	{ markComposite(elementTypeProvider.getAssignableAlternativesElementType()); }
	ruleAssignableAlternatives
	EOF;

// Rule AssignableAlternatives
ruleAssignableAlternatives:
	(
		{
			markComposite(elementTypeProvider.getAssignableAlternatives_AssignableTerminalParserRuleCall_0ElementType());
		}
		ruleAssignableTerminal
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getAssignableAlternatives_AlternativesElementsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getAssignableAlternatives_VerticalLineKeyword_1_1_0ElementType());
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getAssignableAlternatives_ElementsAssignableTerminalParserRuleCall_1_1_1_0ElementType());
						}
						lv_elements_3_0=ruleAssignableTerminal
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleCrossReference
entryRuleCrossReference:
	{ markComposite(elementTypeProvider.getCrossReferenceElementType()); }
	ruleCrossReference
	EOF;

// Rule CrossReference
ruleCrossReference:
	(
		{
			markLeaf(elementTypeProvider.getCrossReference_LeftSquareBracketKeyword_0ElementType());
		}
		otherlv_0='['
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getCrossReference_TypeTypeRefParserRuleCall_1_0ElementType());
				}
				lv_type_1_0=ruleTypeRef
				{
					doneComposite();
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getCrossReference_VerticalLineKeyword_2_0ElementType());
			}
			otherlv_2='|'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getCrossReference_TerminalCrossReferenceableTerminalParserRuleCall_2_1_0ElementType());
					}
					lv_terminal_3_0=ruleCrossReferenceableTerminal
					{
						doneComposite();
					}
				)
			)
		)?
		{
			markLeaf(elementTypeProvider.getCrossReference_RightSquareBracketKeyword_3ElementType());
		}
		otherlv_4=']'
		{
			doneLeaf(otherlv_4);
		}
	)
;

//Entry rule entryRuleCrossReferenceableTerminal
entryRuleCrossReferenceableTerminal:
	{ markComposite(elementTypeProvider.getCrossReferenceableTerminalElementType()); }
	ruleCrossReferenceableTerminal
	EOF;

// Rule CrossReferenceableTerminal
ruleCrossReferenceableTerminal:
	(
		{
			markComposite(elementTypeProvider.getCrossReferenceableTerminal_KeywordParserRuleCall_0ElementType());
		}
		ruleKeyword
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCrossReferenceableTerminal_RuleCallParserRuleCall_1ElementType());
		}
		ruleRuleCall
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleParenthesizedElement
entryRuleParenthesizedElement:
	{ markComposite(elementTypeProvider.getParenthesizedElementElementType()); }
	ruleParenthesizedElement
	EOF;

// Rule ParenthesizedElement
ruleParenthesizedElement:
	(
		{
			markLeaf(elementTypeProvider.getParenthesizedElement_LeftParenthesisKeyword_0ElementType());
		}
		otherlv_0='('
		{
			doneLeaf(otherlv_0);
		}
		{
			markComposite(elementTypeProvider.getParenthesizedElement_AlternativesParserRuleCall_1ElementType());
		}
		ruleAlternatives
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getParenthesizedElement_RightParenthesisKeyword_2ElementType());
		}
		otherlv_2=')'
		{
			doneLeaf(otherlv_2);
		}
	)
;

//Entry rule entryRulePredicatedGroup
entryRulePredicatedGroup:
	{ markComposite(elementTypeProvider.getPredicatedGroupElementType()); }
	rulePredicatedGroup
	EOF;

// Rule PredicatedGroup
rulePredicatedGroup:
	(
		{
			markComposite(elementTypeProvider.getPredicatedGroup_PredicateParserRuleCall_0ElementType());
		}
		rulePredicate
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getPredicatedGroup_LeftParenthesisKeyword_1ElementType());
		}
		otherlv_1='('
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getPredicatedGroup_ElementsAlternativesParserRuleCall_2_0ElementType());
				}
				lv_elements_2_0=ruleAlternatives
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getPredicatedGroup_RightParenthesisKeyword_3ElementType());
		}
		otherlv_3=')'
		{
			doneLeaf(otherlv_3);
		}
	)
;

//Entry rule entryRuleTerminalRule
entryRuleTerminalRule:
	{ markComposite(elementTypeProvider.getTerminalRuleElementType()); }
	ruleTerminalRule
	EOF;

// Rule TerminalRule
ruleTerminalRule:
	(
		{
			markLeaf(elementTypeProvider.getTerminalRule_TerminalKeyword_0ElementType());
		}
		otherlv_0='terminal'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getTerminalRule_FragmentFragmentKeyword_1_0_0_0ElementType());
						}
						lv_fragment_1_0='fragment'
						{
							doneLeaf(lv_fragment_1_0);
						}
					)
				)
				(
					(
						{
							markLeaf(elementTypeProvider.getTerminalRule_NameIDTerminalRuleCall_1_0_1_0ElementType());
						}
						lv_name_2_0=RULE_ID
						{
							doneLeaf(lv_name_2_0);
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getTerminalRule_NameIDTerminalRuleCall_1_1_0_0ElementType());
						}
						lv_name_3_0=RULE_ID
						{
							doneLeaf(lv_name_3_0);
						}
					)
				)
				(
					{
						markComposite(elementTypeProvider.getTerminalRule_ReturnsClauseParserRuleCall_1_1_1ElementType());
					}
					ruleReturnsClause
					{
						doneComposite();
					}
				)?
			)
		)
		{
			markLeaf(elementTypeProvider.getTerminalRule_ColonKeyword_2ElementType());
		}
		otherlv_5=':'
		{
			doneLeaf(otherlv_5);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getTerminalRule_AlternativesTerminalAlternativesParserRuleCall_3_0ElementType());
				}
				lv_alternatives_6_0=ruleTerminalAlternatives
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getTerminalRule_SemicolonKeyword_4ElementType());
		}
		otherlv_7=';'
		{
			doneLeaf(otherlv_7);
		}
	)
;

//Entry rule entryRuleTerminalAlternatives
entryRuleTerminalAlternatives:
	{ markComposite(elementTypeProvider.getTerminalAlternativesElementType()); }
	ruleTerminalAlternatives
	EOF;

// Rule TerminalAlternatives
ruleTerminalAlternatives:
	(
		{
			markComposite(elementTypeProvider.getTerminalAlternatives_TerminalGroupParserRuleCall_0ElementType());
		}
		ruleTerminalGroup
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getTerminalAlternatives_AlternativesElementsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getTerminalAlternatives_VerticalLineKeyword_1_1_0ElementType());
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getTerminalAlternatives_ElementsTerminalGroupParserRuleCall_1_1_1_0ElementType());
						}
						lv_elements_3_0=ruleTerminalGroup
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleTerminalGroup
entryRuleTerminalGroup:
	{ markComposite(elementTypeProvider.getTerminalGroupElementType()); }
	ruleTerminalGroup
	EOF;

// Rule TerminalGroup
ruleTerminalGroup:
	(
		{
			markComposite(elementTypeProvider.getTerminalGroup_TerminalTokenParserRuleCall_0ElementType());
		}
		ruleTerminalToken
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getTerminalGroup_GroupElementsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getTerminalGroup_ElementsTerminalTokenParserRuleCall_1_1_0ElementType());
					}
					lv_elements_2_0=ruleTerminalToken
					{
						doneComposite();
					}
				)
			)+
		)?
	)
;

//Entry rule entryRuleTerminalToken
entryRuleTerminalToken:
	{ markComposite(elementTypeProvider.getTerminalTokenElementType()); }
	ruleTerminalToken
	EOF;

// Rule TerminalToken
ruleTerminalToken:
	(
		{
			markComposite(elementTypeProvider.getTerminalToken_TerminalTokenElementParserRuleCall_0ElementType());
		}
		ruleTerminalTokenElement
		{
			doneComposite();
		}
		(
			{
				markComposite(elementTypeProvider.getTerminalToken_CardinalitiesParserRuleCall_1ElementType());
			}
			ruleCardinalities
			{
				doneComposite();
			}
		)?
	)
;

//Entry rule entryRuleTerminalTokenElement
entryRuleTerminalTokenElement:
	{ markComposite(elementTypeProvider.getTerminalTokenElementElementType()); }
	ruleTerminalTokenElement
	EOF;

// Rule TerminalTokenElement
ruleTerminalTokenElement:
	(
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_CharacterRangeParserRuleCall_0ElementType());
		}
		ruleCharacterRange
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_TerminalRuleCallParserRuleCall_1ElementType());
		}
		ruleTerminalRuleCall
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_ParenthesizedTerminalElementParserRuleCall_2ElementType());
		}
		ruleParenthesizedTerminalElement
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_AbstractNegatedTokenParserRuleCall_3ElementType());
		}
		ruleAbstractNegatedToken
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_WildcardParserRuleCall_4ElementType());
		}
		ruleWildcard
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getTerminalTokenElement_EOFParserRuleCall_5ElementType());
		}
		ruleEOF
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleParenthesizedTerminalElement
entryRuleParenthesizedTerminalElement:
	{ markComposite(elementTypeProvider.getParenthesizedTerminalElementElementType()); }
	ruleParenthesizedTerminalElement
	EOF;

// Rule ParenthesizedTerminalElement
ruleParenthesizedTerminalElement:
	(
		{
			markLeaf(elementTypeProvider.getParenthesizedTerminalElement_LeftParenthesisKeyword_0ElementType());
		}
		otherlv_0='('
		{
			doneLeaf(otherlv_0);
		}
		{
			markComposite(elementTypeProvider.getParenthesizedTerminalElement_TerminalAlternativesParserRuleCall_1ElementType());
		}
		ruleTerminalAlternatives
		{
			doneComposite();
		}
		{
			markLeaf(elementTypeProvider.getParenthesizedTerminalElement_RightParenthesisKeyword_2ElementType());
		}
		otherlv_2=')'
		{
			doneLeaf(otherlv_2);
		}
	)
;

//Entry rule entryRuleAbstractNegatedToken
entryRuleAbstractNegatedToken:
	{ markComposite(elementTypeProvider.getAbstractNegatedTokenElementType()); }
	ruleAbstractNegatedToken
	EOF;

// Rule AbstractNegatedToken
ruleAbstractNegatedToken:
	(
		{
			markComposite(elementTypeProvider.getAbstractNegatedToken_NegatedTokenParserRuleCall_0ElementType());
		}
		ruleNegatedToken
		{
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getAbstractNegatedToken_UntilTokenParserRuleCall_1ElementType());
		}
		ruleUntilToken
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleNegatedToken
entryRuleNegatedToken:
	{ markComposite(elementTypeProvider.getNegatedTokenElementType()); }
	ruleNegatedToken
	EOF;

// Rule NegatedToken
ruleNegatedToken:
	(
		{
			markLeaf(elementTypeProvider.getNegatedToken_ExclamationMarkKeyword_0ElementType());
		}
		otherlv_0='!'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getNegatedToken_TerminalTerminalTokenElementParserRuleCall_1_0ElementType());
				}
				lv_terminal_1_0=ruleTerminalTokenElement
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleUntilToken
entryRuleUntilToken:
	{ markComposite(elementTypeProvider.getUntilTokenElementType()); }
	ruleUntilToken
	EOF;

// Rule UntilToken
ruleUntilToken:
	(
		{
			markLeaf(elementTypeProvider.getUntilToken_HyphenMinusGreaterThanSignKeyword_0ElementType());
		}
		otherlv_0='->'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getUntilToken_TerminalTerminalTokenElementParserRuleCall_1_0ElementType());
				}
				lv_terminal_1_0=ruleTerminalTokenElement
				{
					doneComposite();
				}
			)
		)
	)
;

//Entry rule entryRuleWildcard
entryRuleWildcard:
	{ markComposite(elementTypeProvider.getWildcardElementType()); }
	ruleWildcard
	EOF;

// Rule Wildcard
ruleWildcard:
	(
		(
			{
				precedeComposite(elementTypeProvider.getWildcard_WildcardAction_0ElementType());
				doneComposite();
			}
		)
		{
			markLeaf(elementTypeProvider.getWildcard_FullStopKeyword_1ElementType());
		}
		otherlv_1='.'
		{
			doneLeaf(otherlv_1);
		}
	)
;

//Entry rule entryRuleEOF
entryRuleEOF:
	{ markComposite(elementTypeProvider.getEOFElementType()); }
	ruleEOF
	EOF;

// Rule EOF
ruleEOF:
	(
		(
			{
				precedeComposite(elementTypeProvider.getEOF_EOFAction_0ElementType());
				doneComposite();
			}
		)
		{
			markLeaf(elementTypeProvider.getEOF_EOFKeyword_1ElementType());
		}
		otherlv_1='EOF'
		{
			doneLeaf(otherlv_1);
		}
	)
;

//Entry rule entryRuleCharacterRange
entryRuleCharacterRange:
	{ markComposite(elementTypeProvider.getCharacterRangeElementType()); }
	ruleCharacterRange
	EOF;

// Rule CharacterRange
ruleCharacterRange:
	(
		{
			markComposite(elementTypeProvider.getCharacterRange_KeywordParserRuleCall_0ElementType());
		}
		ruleKeyword
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCharacterRange_CharacterRangeLeftAction_1_0ElementType());
					doneComposite();
				}
			)
			{
				markLeaf(elementTypeProvider.getCharacterRange_FullStopFullStopKeyword_1_1ElementType());
			}
			otherlv_2='..'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getCharacterRange_RightKeywordParserRuleCall_1_2_0ElementType());
					}
					lv_right_3_0=ruleKeyword
					{
						doneComposite();
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleEnumRule
entryRuleEnumRule:
	{ markComposite(elementTypeProvider.getEnumRuleElementType()); }
	ruleEnumRule
	EOF;

// Rule EnumRule
ruleEnumRule:
	(
		{
			markLeaf(elementTypeProvider.getEnumRule_EnumKeyword_0ElementType());
		}
		otherlv_0='enum'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getEnumRule_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		(
			{
				markComposite(elementTypeProvider.getEnumRule_ReturnsClauseParserRuleCall_2ElementType());
			}
			ruleReturnsClause
			{
				doneComposite();
			}
		)?
		{
			markLeaf(elementTypeProvider.getEnumRule_ColonKeyword_3ElementType());
		}
		otherlv_3=':'
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getEnumRule_AlternativesEnumLiteralsParserRuleCall_4_0ElementType());
				}
				lv_alternatives_4_0=ruleEnumLiterals
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getEnumRule_SemicolonKeyword_5ElementType());
		}
		otherlv_5=';'
		{
			doneLeaf(otherlv_5);
		}
	)
;

//Entry rule entryRuleEnumLiterals
entryRuleEnumLiterals:
	{ markComposite(elementTypeProvider.getEnumLiteralsElementType()); }
	ruleEnumLiterals
	EOF;

// Rule EnumLiterals
ruleEnumLiterals:
	(
		{
			markComposite(elementTypeProvider.getEnumLiterals_EnumLiteralDeclarationParserRuleCall_0ElementType());
		}
		ruleEnumLiteralDeclaration
		{
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getEnumLiterals_AlternativesElementsAction_1_0ElementType());
					doneComposite();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getEnumLiterals_VerticalLineKeyword_1_1_0ElementType());
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getEnumLiterals_ElementsEnumLiteralDeclarationParserRuleCall_1_1_1_0ElementType());
						}
						lv_elements_3_0=ruleEnumLiteralDeclaration
						{
							doneComposite();
						}
					)
				)
			)+
		)?
	)
;

//Entry rule entryRuleEnumLiteralDeclaration
entryRuleEnumLiteralDeclaration:
	{ markComposite(elementTypeProvider.getEnumLiteralDeclarationElementType()); }
	ruleEnumLiteralDeclaration
	EOF;

// Rule EnumLiteralDeclaration
ruleEnumLiteralDeclaration:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getEnumLiteralDeclaration_EnumLiteralEEnumLiteralCrossReference_0_0ElementType());
				}
				otherlv_0=RULE_ID
				{
					doneLeaf(otherlv_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getEnumLiteralDeclaration_EqualsSignKeyword_1_0ElementType());
			}
			otherlv_1='='
			{
				doneLeaf(otherlv_1);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getEnumLiteralDeclaration_LiteralKeywordParserRuleCall_1_1_0ElementType());
					}
					lv_literal_2_0=ruleKeyword
					{
						doneComposite();
					}
				)
			)
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
