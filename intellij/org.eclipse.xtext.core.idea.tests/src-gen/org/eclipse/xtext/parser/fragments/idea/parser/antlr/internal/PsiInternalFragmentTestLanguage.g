/*
 * generated by Xtext
 */
grammar PsiInternalFragmentTestLanguage;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.xtext.parser.fragments.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.parser.fragments.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtext.parser.fragments.idea.lang.FragmentTestLanguageElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.fragments.services.FragmentTestLanguageGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected FragmentTestLanguageGrammarAccess grammarAccess;

	protected FragmentTestLanguageElementTypeProvider elementTypeProvider;

	public PsiInternalFragmentTestLanguageParser(PsiBuilder builder, TokenStream input, FragmentTestLanguageElementTypeProvider elementTypeProvider, FragmentTestLanguageGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Fragments";
	}

}

//Entry rule entryRuleFragments
entryRuleFragments:
	{ markComposite(elementTypeProvider.getFragmentsElementType()); }
	ruleFragments
	EOF;

// Rule Fragments
ruleFragments:
	(
		(
			{
				precedeComposite(elementTypeProvider.getFragments_FragmentsAction_0ElementType());
				doneComposite();
			}
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getFragments_NumberSignDigitOneKeyword_1_0_0ElementType());
				}
				otherlv_1='#1'
				{
					doneLeaf(otherlv_1);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getFragments_ElementNamedParserRuleCall_1_0_1_0ElementType());
						}
						lv_element_2_0=ruleNamed
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getFragments_NumberSignDigitTwoKeyword_1_1_0ElementType());
				}
				otherlv_3='#2'
				{
					doneLeaf(otherlv_3);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getFragments_ElementNamedParserRuleCall_1_1_1_0ElementType());
						}
						lv_element_4_0=ruleNamed
						{
							doneComposite();
						}
					)
				)
				{
					markLeaf(elementTypeProvider.getFragments_HyphenMinusGreaterThanSignKeyword_1_1_2ElementType());
				}
				otherlv_5='->'
				{
					doneLeaf(otherlv_5);
				}
				(
					(
						{
							markLeaf(elementTypeProvider.getFragments_RefNamedCrossReference_1_1_3_0ElementType());
						}
						otherlv_6=RULE_ID
						{
							doneLeaf(otherlv_6);
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getFragments_NumberSignDigitThreeKeyword_1_2_0ElementType());
				}
				otherlv_7='#3'
				{
					doneLeaf(otherlv_7);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getFragments_ElementNamedRefFirstParserRuleCall_1_2_1_0ElementType());
						}
						lv_element_8_0=ruleNamedRefFirst
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getFragments_NumberSignDigitFourKeyword_1_3_0ElementType());
				}
				otherlv_9='#4'
				{
					doneLeaf(otherlv_9);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getFragments_ElementNamedWithActionParserRuleCall_1_3_1_0ElementType());
						}
						lv_element_10_0=ruleNamedWithAction
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getFragments_NumberSignDigitFiveKeyword_1_4_0ElementType());
				}
				otherlv_11='#5'
				{
					doneLeaf(otherlv_11);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getFragments_ElementNamedWithActionInFragmentParserRuleCall_1_4_1_0ElementType());
						}
						lv_element_12_0=ruleNamedWithActionInFragment
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getFragments_NumberSignDigitSixKeyword_1_5_0ElementType());
				}
				otherlv_13='#6'
				{
					doneLeaf(otherlv_13);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getFragments_ElementNamedWithActionInFragment2ParserRuleCall_1_5_1_0ElementType());
						}
						lv_element_14_0=ruleNamedWithActionInFragment2
						{
							doneComposite();
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getFragments_NumberSignDigitSevenKeyword_1_6_0ElementType());
				}
				otherlv_15='#7'
				{
					doneLeaf(otherlv_15);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getFragments_ElementNamedWithActionInFragment3ParserRuleCall_1_6_1_0ElementType());
						}
						lv_element_16_0=ruleNamedWithActionInFragment3
						{
							doneComposite();
						}
					)
				)
			)
		)
	)
;

//Entry rule entryRuleNamed
entryRuleNamed:
	{ markComposite(elementTypeProvider.getNamedElementType()); }
	ruleNamed
	EOF;

// Rule Named
ruleNamed:
	(
		{
			markComposite(elementTypeProvider.getNamed_NamedFragmentParserRuleCall_0ElementType());
		}
		ruleNamedFragment
		{
			doneComposite();
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getNamed_ColonKeyword_1_0_0ElementType());
				}
				otherlv_1=':'
				{
					doneLeaf(otherlv_1);
				}
				(
					(
						{
							markLeaf(elementTypeProvider.getNamed_RefNamedCrossReference_1_0_1_0ElementType());
						}
						otherlv_2=RULE_ID
						{
							doneLeaf(otherlv_2);
						}
					)
				)
			)
			    |
			(
				{
					markLeaf(elementTypeProvider.getNamed_HyphenMinusKeyword_1_1_0ElementType());
				}
				otherlv_3='-'
				{
					doneLeaf(otherlv_3);
				}
				{
					markComposite(elementTypeProvider.getNamed_NamedRefParserRuleCall_1_1_1ElementType());
				}
				ruleNamedRef
				{
					doneComposite();
				}
			)
		)?
	)
;

//Entry rule entryRuleNamedRefFirst
entryRuleNamedRefFirst:
	{ markComposite(elementTypeProvider.getNamedRefFirstElementType()); }
	ruleNamedRefFirst
	EOF;

// Rule NamedRefFirst
ruleNamedRefFirst:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getNamedRefFirst_RefNamedCrossReference_0_0ElementType());
				}
				otherlv_0=RULE_ID
				{
					doneLeaf(otherlv_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getNamedRefFirst_LessThanSignHyphenMinusKeyword_1ElementType());
		}
		otherlv_1='<-'
		{
			doneLeaf(otherlv_1);
		}
		{
			markComposite(elementTypeProvider.getNamedRefFirst_NamedFragmentParserRuleCall_2ElementType());
		}
		ruleNamedFragment
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleNamedWithAction
entryRuleNamedWithAction:
	{ markComposite(elementTypeProvider.getNamedWithActionElementType()); }
	ruleNamedWithAction
	EOF;

// Rule NamedWithAction
ruleNamedWithAction:
	(
		{
			markComposite(elementTypeProvider.getNamedWithAction_NamedParserRuleCall_0ElementType());
		}
		ruleNamed
		{
			doneComposite();
		}
		(
			{
				precedeComposite(elementTypeProvider.getNamedWithAction_NamedWithActionPrevAction_1ElementType());
				doneComposite();
			}
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getNamedWithAction_NameIDTerminalRuleCall_2_0ElementType());
				}
				lv_name_2_0=RULE_ID
				{
					doneLeaf(lv_name_2_0);
				}
			)
		)
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getNamedWithAction_RefNamedCrossReference_3_0_0ElementType());
					}
					otherlv_3=RULE_ID
					{
						doneLeaf(otherlv_3);
					}
				)
			)
			(
				(
					{
						markLeaf(elementTypeProvider.getNamedWithAction_Ref2NamedCrossReference_3_1_0ElementType());
					}
					otherlv_4=RULE_ID
					{
						doneLeaf(otherlv_4);
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleNamedWithActionInFragment
entryRuleNamedWithActionInFragment:
	{ markComposite(elementTypeProvider.getNamedWithActionInFragmentElementType()); }
	ruleNamedWithActionInFragment
	EOF;

// Rule NamedWithActionInFragment
ruleNamedWithActionInFragment:
	(
		{
			markComposite(elementTypeProvider.getNamedWithActionInFragment_FragmentWithActionParserRuleCall_0ElementType());
		}
		ruleFragmentWithAction
		{
			doneComposite();
		}
		(
			{
				markLeaf(elementTypeProvider.getNamedWithActionInFragment_HyphenMinusKeyword_1_0ElementType());
			}
			otherlv_1='-'
			{
				doneLeaf(otherlv_1);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getNamedWithActionInFragment_RefNamedCrossReference_1_1_0ElementType());
					}
					otherlv_2=RULE_ID
					{
						doneLeaf(otherlv_2);
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleNamedWithActionInFragment2
entryRuleNamedWithActionInFragment2:
	{ markComposite(elementTypeProvider.getNamedWithActionInFragment2ElementType()); }
	ruleNamedWithActionInFragment2
	EOF;

// Rule NamedWithActionInFragment2
ruleNamedWithActionInFragment2:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getNamedWithActionInFragment2_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		{
			markComposite(elementTypeProvider.getNamedWithActionInFragment2_FragmentWithAction2ParserRuleCall_1ElementType());
		}
		ruleFragmentWithAction2
		{
			doneComposite();
		}
		(
			{
				markLeaf(elementTypeProvider.getNamedWithActionInFragment2_HyphenMinusKeyword_2_0ElementType());
			}
			otherlv_2='-'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getNamedWithActionInFragment2_RefNamedCrossReference_2_1_0ElementType());
					}
					otherlv_3=RULE_ID
					{
						doneLeaf(otherlv_3);
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleNamedWithActionInFragment3
entryRuleNamedWithActionInFragment3:
	{ markComposite(elementTypeProvider.getNamedWithActionInFragment3ElementType()); }
	ruleNamedWithActionInFragment3
	EOF;

// Rule NamedWithActionInFragment3
ruleNamedWithActionInFragment3:
	(
		{
			markComposite(elementTypeProvider.getNamedWithActionInFragment3_FragmentWithAction3ParserRuleCall_0ElementType());
		}
		ruleFragmentWithAction3
		{
			doneComposite();
		}
		(
			{
				markLeaf(elementTypeProvider.getNamedWithActionInFragment3_HyphenMinusKeyword_1_0ElementType());
			}
			otherlv_1='-'
			{
				doneLeaf(otherlv_1);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getNamedWithActionInFragment3_RefNamedCrossReference_1_1_0ElementType());
					}
					otherlv_2=RULE_ID
					{
						doneLeaf(otherlv_2);
					}
				)
			)
		)?
	)
;

//Entry rule entryRuleFragmentWithAction
entryRuleFragmentWithAction:
	{ markComposite(elementTypeProvider.getFragmentWithActionElementType()); }
	ruleFragmentWithAction
	EOF;

// Rule FragmentWithAction
ruleFragmentWithAction:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getFragmentWithAction_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		(
			{
				precedeComposite(elementTypeProvider.getFragmentWithAction_NamedWithActionPrevAction_1ElementType());
				doneComposite();
			}
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getFragmentWithAction_NameIDTerminalRuleCall_2_0ElementType());
				}
				lv_name_2_0=RULE_ID
				{
					doneLeaf(lv_name_2_0);
				}
			)
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getFragmentWithAction_Ref2NamedCrossReference_3_0ElementType());
				}
				otherlv_3=RULE_ID
				{
					doneLeaf(otherlv_3);
				}
			)
		)?
	)
;

//Entry rule entryRuleFragmentWithAction2
entryRuleFragmentWithAction2:
	{ markComposite(elementTypeProvider.getFragmentWithAction2ElementType()); }
	ruleFragmentWithAction2
	EOF;

// Rule FragmentWithAction2
ruleFragmentWithAction2:
	(
		(
			{
				precedeComposite(elementTypeProvider.getFragmentWithAction2_NamedWithActionPrevAction_0ElementType());
				doneComposite();
			}
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getFragmentWithAction2_NameIDTerminalRuleCall_1_0ElementType());
				}
				lv_name_1_0=RULE_ID
				{
					doneLeaf(lv_name_1_0);
				}
			)
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getFragmentWithAction2_Ref2NamedCrossReference_2_0ElementType());
				}
				otherlv_2=RULE_ID
				{
					doneLeaf(otherlv_2);
				}
			)
		)?
	)
;

//Entry rule entryRuleFragmentWithAction3
entryRuleFragmentWithAction3:
	{ markComposite(elementTypeProvider.getFragmentWithAction3ElementType()); }
	ruleFragmentWithAction3
	EOF;

// Rule FragmentWithAction3
ruleFragmentWithAction3:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getFragmentWithAction3_NameIDTerminalRuleCall_0_0ElementType());
				}
				lv_name_0_0=RULE_ID
				{
					doneLeaf(lv_name_0_0);
				}
			)
		)
		(
			(
				{
					precedeComposite(elementTypeProvider.getFragmentWithAction3_NamedWithActionPrevAction_1_0ElementType());
					doneComposite();
				}
			)
			{
				markLeaf(elementTypeProvider.getFragmentWithAction3_HyphenMinusGreaterThanSignKeyword_1_1ElementType());
			}
			otherlv_2='->'
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getFragmentWithAction3_NameIDTerminalRuleCall_1_2_0ElementType());
					}
					lv_name_3_0=RULE_ID
					{
						doneLeaf(lv_name_3_0);
					}
				)
			)
			(
				(
					{
						markLeaf(elementTypeProvider.getFragmentWithAction3_Ref2NamedCrossReference_1_3_0ElementType());
					}
					otherlv_4=RULE_ID
					{
						doneLeaf(otherlv_4);
					}
				)
			)?
		)*
	)
;

//Entry rule entryRuleNamedFragment
entryRuleNamedFragment:
	{ markComposite(elementTypeProvider.getNamedFragmentElementType()); }
	ruleNamedFragment
	EOF;

// Rule NamedFragment
ruleNamedFragment:
	(
		(
			{
				markLeaf(elementTypeProvider.getNamedFragment_NameIDTerminalRuleCall_0ElementType());
			}
			lv_name_0_0=RULE_ID
			{
				doneLeaf(lv_name_0_0);
			}
		)
	)
;

//Entry rule entryRuleNamedRef
entryRuleNamedRef:
	{ markComposite(elementTypeProvider.getNamedRefElementType()); }
	ruleNamedRef
	EOF;

// Rule NamedRef
ruleNamedRef:
	(
		(
			{
				markLeaf(elementTypeProvider.getNamedRef_RefNamedCrossReference_0ElementType());
			}
			otherlv_0=RULE_ID
			{
				doneLeaf(otherlv_0);
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
