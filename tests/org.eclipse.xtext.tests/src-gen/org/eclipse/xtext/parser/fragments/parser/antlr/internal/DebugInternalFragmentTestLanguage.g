/*
 * generated by Xtext
 */
grammar DebugInternalFragmentTestLanguage ;

// Rule Fragments
ruleFragments :
	'#1' ruleNamed |
	'#2' ruleNamed '->' RULE_ID |
	'#3' ruleNamedRefFirst |
	'#4' ruleNamedWithAction |
	'#5' ruleNamedWithActionInFragment |
	'#6' ruleNamedWithActionInFragment2 |
	'#7' ruleNamedWithActionInFragment3
;

// Rule Named
ruleNamed :
	ruleNamedFragment (
		':' RULE_ID |
		'-' ruleNamedRef
	)?
;

// Rule NamedRefFirst
ruleNamedRefFirst :
	RULE_ID '<-' ruleNamedFragment
;

// Rule NamedWithAction
ruleNamedWithAction :
	ruleNamed RULE_ID (
		RULE_ID RULE_ID
	)?
;

// Rule NamedWithActionInFragment
ruleNamedWithActionInFragment :
	ruleFragmentWithAction (
		'-' RULE_ID
	)?
;

// Rule NamedWithActionInFragment2
ruleNamedWithActionInFragment2 :
	RULE_ID ruleFragmentWithAction2 (
		'-' RULE_ID
	)?
;

// Rule NamedWithActionInFragment3
ruleNamedWithActionInFragment3 :
	ruleFragmentWithAction3 (
		'-' RULE_ID
	)?
;

// Rule FragmentWithAction
ruleFragmentWithAction :
	RULE_ID RULE_ID RULE_ID?
;

// Rule FragmentWithAction2
ruleFragmentWithAction2 :
	RULE_ID RULE_ID?
;

// Rule FragmentWithAction3
ruleFragmentWithAction3 :
	RULE_ID (
		'->' RULE_ID RULE_ID?
	)*
;

// Rule NamedFragment
ruleNamedFragment :
	RULE_ID
;

// Rule NamedRef
ruleNamedRef :
	RULE_ID
;

RULE_ID :
	'^'? (
		'a' .. 'z' |
		'A' .. 'Z' |
		'_'
	) (
		'a' .. 'z' |
		'A' .. 'Z' |
		'_' |
		'0' .. '9'
	)*
;

RULE_INT :
	'0' .. '9'+
;

RULE_STRING :
	'"' (
		'\\' . |
		~ (
			'\\' |
			'"'
		)
	)* '"' |
	'\'' (
		'\\' . |
		~ (
			'\\' |
			'\''
		)
	)* '\''
;

RULE_ML_COMMENT :
	'/*' (
		options { greedy = false ; } : .
	)* '*/' {skip();}
;

RULE_SL_COMMENT :
	'//' ~ (
		'\n' |
		'\r'
	)* (
		'\r'? '\n'
	)? {skip();}
;

RULE_WS :
	(
		' ' |
		'\t' |
		'\r' |
		'\n'
	)+ {skip();}
;

RULE_ANY_OTHER :
	.
;