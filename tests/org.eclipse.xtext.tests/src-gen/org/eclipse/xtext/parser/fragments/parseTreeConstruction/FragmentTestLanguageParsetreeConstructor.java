/*
 * generated by Xtext
 */
package org.eclipse.xtext.parser.fragments.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;

import org.eclipse.xtext.parser.fragments.services.FragmentTestLanguageGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class FragmentTestLanguageParsetreeConstructor extends org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor {
		
	@Inject
	private FragmentTestLanguageGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_Group(this, this, 0, inst);
			case 1: return new PRFNamed_Group(this, this, 1, inst);
			case 2: return new PRFNamedRefFirst_Group(this, this, 2, inst);
			case 3: return new PRFNamedWithAction_Group(this, this, 3, inst);
			case 4: return new PRFNamedWithActionInFragment_Group(this, this, 4, inst);
			case 5: return new PRFNamedWithActionInFragment2_Group(this, this, 5, inst);
			case 6: return new PRFNamedWithActionInFragment3_Group(this, this, 6, inst);
			case 7: return new PRFNamedWithFQN_Group(this, this, 7, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule ParserRuleFragments ****************
 *
 * ParserRuleFragments:
 * 	{ParserRuleFragments} ("#1" element=PRFNamed | "#2" element=PRFNamed "->" ref=[PRFNamed] | "#3"
 * 	element=PRFNamedRefFirst | "#4" element=PRFNamedWithAction | "#5" element=PRFNamedWithActionInFragment | "#6"
 * 	element=PRFNamedWithActionInFragment2 | "#7" element=PRFNamedWithActionInFragment3 | "#8" element=PRFNamedWithFQN);
 *
 **/

// {ParserRuleFragments} ("#1" element=PRFNamed | "#2" element=PRFNamed "->" ref=[PRFNamed] | "#3" element=PRFNamedRefFirst
// | "#4" element=PRFNamedWithAction | "#5" element=PRFNamedWithActionInFragment | "#6"
// element=PRFNamedWithActionInFragment2 | "#7" element=PRFNamedWithActionInFragment3 | "#8" element=PRFNamedWithFQN)
protected class ParserRuleFragments_Group extends GroupToken {
	
	public ParserRuleFragments_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParserRuleFragmentsAccess().getParserRuleFragmentsAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {ParserRuleFragments}
protected class ParserRuleFragments_ParserRuleFragmentsAction_0 extends ActionToken  {

	public ParserRuleFragments_ParserRuleFragmentsAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getParserRuleFragmentsAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "#1" element=PRFNamed | "#2" element=PRFNamed "->" ref=[PRFNamed] | "#3" element=PRFNamedRefFirst | "#4"
// element=PRFNamedWithAction | "#5" element=PRFNamedWithActionInFragment | "#6" element=PRFNamedWithActionInFragment2 |
// "#7" element=PRFNamedWithActionInFragment3 | "#8" element=PRFNamedWithFQN
protected class ParserRuleFragments_Alternatives_1 extends AlternativesToken {

	public ParserRuleFragments_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ParserRuleFragments_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ParserRuleFragments_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ParserRuleFragments_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ParserRuleFragments_Group_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ParserRuleFragments_Group_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ParserRuleFragments_Group_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ParserRuleFragments_Group_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// "#1" element=PRFNamed
protected class ParserRuleFragments_Group_1_0 extends GroupToken {
	
	public ParserRuleFragments_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ElementAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "#1"
protected class ParserRuleFragments_NumberSignDigitOneKeyword_1_0_0 extends KeywordToken  {
	
	public ParserRuleFragments_NumberSignDigitOneKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitOneKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ParserRuleFragmentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// element=PRFNamed
protected class ParserRuleFragments_ElementAssignment_1_0_1 extends AssignmentToken  {
	
	public ParserRuleFragments_ElementAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getElementAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedParserRuleCall_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleFragments_NumberSignDigitOneKeyword_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "#2" element=PRFNamed "->" ref=[PRFNamed]
protected class ParserRuleFragments_Group_1_1 extends GroupToken {
	
	public ParserRuleFragments_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_RefAssignment_1_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "#2"
protected class ParserRuleFragments_NumberSignDigitTwoKeyword_1_1_0 extends KeywordToken  {
	
	public ParserRuleFragments_NumberSignDigitTwoKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitTwoKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ParserRuleFragmentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// element=PRFNamed
protected class ParserRuleFragments_ElementAssignment_1_1_1 extends AssignmentToken  {
	
	public ParserRuleFragments_ElementAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getElementAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedParserRuleCall_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleFragments_NumberSignDigitTwoKeyword_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "->"
protected class ParserRuleFragments_HyphenMinusGreaterThanSignKeyword_1_1_2 extends KeywordToken  {
	
	public ParserRuleFragments_HyphenMinusGreaterThanSignKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getHyphenMinusGreaterThanSignKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ElementAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=[PRFNamed]
protected class ParserRuleFragments_RefAssignment_1_1_3 extends AssignmentToken  {
	
	public ParserRuleFragments_RefAssignment_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getRefAssignment_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_HyphenMinusGreaterThanSignKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParserRuleFragmentsAccess().getRefPRFNamedCrossReference_1_1_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getParserRuleFragmentsAccess().getRefPRFNamedCrossReference_1_1_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "#3" element=PRFNamedRefFirst
protected class ParserRuleFragments_Group_1_2 extends GroupToken {
	
	public ParserRuleFragments_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ElementAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "#3"
protected class ParserRuleFragments_NumberSignDigitThreeKeyword_1_2_0 extends KeywordToken  {
	
	public ParserRuleFragments_NumberSignDigitThreeKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitThreeKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ParserRuleFragmentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// element=PRFNamedRefFirst
protected class ParserRuleFragments_ElementAssignment_1_2_1 extends AssignmentToken  {
	
	public ParserRuleFragments_ElementAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getElementAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedRefFirst_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedRefFirstRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedRefFirstParserRuleCall_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleFragments_NumberSignDigitThreeKeyword_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "#4" element=PRFNamedWithAction
protected class ParserRuleFragments_Group_1_3 extends GroupToken {
	
	public ParserRuleFragments_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ElementAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "#4"
protected class ParserRuleFragments_NumberSignDigitFourKeyword_1_3_0 extends KeywordToken  {
	
	public ParserRuleFragments_NumberSignDigitFourKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitFourKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ParserRuleFragmentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// element=PRFNamedWithAction
protected class ParserRuleFragments_ElementAssignment_1_3_1 extends AssignmentToken  {
	
	public ParserRuleFragments_ElementAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getElementAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithAction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithActionParserRuleCall_1_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleFragments_NumberSignDigitFourKeyword_1_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "#5" element=PRFNamedWithActionInFragment
protected class ParserRuleFragments_Group_1_4 extends GroupToken {
	
	public ParserRuleFragments_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ElementAssignment_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "#5"
protected class ParserRuleFragments_NumberSignDigitFiveKeyword_1_4_0 extends KeywordToken  {
	
	public ParserRuleFragments_NumberSignDigitFiveKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitFiveKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ParserRuleFragmentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// element=PRFNamedWithActionInFragment
protected class ParserRuleFragments_ElementAssignment_1_4_1 extends AssignmentToken  {
	
	public ParserRuleFragments_ElementAssignment_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getElementAssignment_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionInFragmentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithActionInFragmentParserRuleCall_1_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleFragments_NumberSignDigitFiveKeyword_1_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "#6" element=PRFNamedWithActionInFragment2
protected class ParserRuleFragments_Group_1_5 extends GroupToken {
	
	public ParserRuleFragments_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ElementAssignment_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "#6"
protected class ParserRuleFragments_NumberSignDigitSixKeyword_1_5_0 extends KeywordToken  {
	
	public ParserRuleFragments_NumberSignDigitSixKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitSixKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ParserRuleFragmentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// element=PRFNamedWithActionInFragment2
protected class ParserRuleFragments_ElementAssignment_1_5_1 extends AssignmentToken  {
	
	public ParserRuleFragments_ElementAssignment_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getElementAssignment_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionInFragment2Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithActionInFragment2ParserRuleCall_1_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleFragments_NumberSignDigitSixKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "#7" element=PRFNamedWithActionInFragment3
protected class ParserRuleFragments_Group_1_6 extends GroupToken {
	
	public ParserRuleFragments_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ElementAssignment_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "#7"
protected class ParserRuleFragments_NumberSignDigitSevenKeyword_1_6_0 extends KeywordToken  {
	
	public ParserRuleFragments_NumberSignDigitSevenKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitSevenKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ParserRuleFragmentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// element=PRFNamedWithActionInFragment3
protected class ParserRuleFragments_ElementAssignment_1_6_1 extends AssignmentToken  {
	
	public ParserRuleFragments_ElementAssignment_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getElementAssignment_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionInFragment3Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithActionInFragment3ParserRuleCall_1_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleFragments_NumberSignDigitSevenKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "#8" element=PRFNamedWithFQN
protected class ParserRuleFragments_Group_1_7 extends GroupToken {
	
	public ParserRuleFragments_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ElementAssignment_1_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "#8"
protected class ParserRuleFragments_NumberSignDigitEightKeyword_1_7_0 extends KeywordToken  {
	
	public ParserRuleFragments_NumberSignDigitEightKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitEightKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ParserRuleFragments_ParserRuleFragmentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// element=PRFNamedWithFQN
protected class ParserRuleFragments_ElementAssignment_1_7_1 extends AssignmentToken  {
	
	public ParserRuleFragments_ElementAssignment_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParserRuleFragmentsAccess().getElementAssignment_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithFQN_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("element",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("element");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithFQNRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithFQNParserRuleCall_1_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ParserRuleFragments_NumberSignDigitEightKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule ParserRuleFragments ****************/


/************ begin Rule PRFNamed ****************
 *
 * PRFNamed:
 * 	PRFNamedFragment (":" ref=[PRFNamed] | "-" PRFNamedRef)?;
 *
 **/

// PRFNamedFragment (":" ref=[PRFNamed] | "-" PRFNamedRef)?
protected class PRFNamed_Group extends GroupToken {
	
	public PRFNamed_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PRFNamed_PRFNamedFragmentParserRuleCall_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// PRFNamedFragment
protected class PRFNamed_PRFNamedFragmentParserRuleCall_0 extends RuleCallToken {
	
	public PRFNamed_PRFNamedFragmentParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getPRFNamedFragmentParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedFragment_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(PRFNamedFragment_NameAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// (":" ref=[PRFNamed] | "-" PRFNamedRef)?
protected class PRFNamed_Alternatives_1 extends AlternativesToken {

	public PRFNamed_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PRFNamed_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ":" ref=[PRFNamed]
protected class PRFNamed_Group_1_0 extends GroupToken {
	
	public PRFNamed_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_RefAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PRFNamed_ColonKeyword_1_0_0 extends KeywordToken  {
	
	public PRFNamed_ColonKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getColonKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_PRFNamedFragmentParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=[PRFNamed]
protected class PRFNamed_RefAssignment_1_0_1 extends AssignmentToken  {
	
	public PRFNamed_RefAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getRefAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_ColonKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedAccess().getRefPRFNamedCrossReference_1_0_1_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedAccess().getRefPRFNamedCrossReference_1_0_1_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedAccess().getRefPRFNamedCrossReference_1_0_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "-" PRFNamedRef
protected class PRFNamed_Group_1_1 extends GroupToken {
	
	public PRFNamed_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_PRFNamedRefParserRuleCall_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "-"
protected class PRFNamed_HyphenMinusKeyword_1_1_0 extends KeywordToken  {
	
	public PRFNamed_HyphenMinusKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getHyphenMinusKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_PRFNamedFragmentParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// PRFNamedRef
protected class PRFNamed_PRFNamedRefParserRuleCall_1_1_1 extends RuleCallToken {
	
	public PRFNamed_PRFNamedRefParserRuleCall_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPRFNamedAccess().getPRFNamedRefParserRuleCall_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedRef_RefAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(PRFNamedRef_RefAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_HyphenMinusKeyword_1_1_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}




/************ end Rule PRFNamed ****************/


/************ begin Rule PRFNamedRefFirst ****************
 *
 * PRFNamedRefFirst returns PRFNamed:
 * 	ref=[PRFNamed] "<-" PRFNamedFragment;
 *
 **/

// ref=[PRFNamed] "<-" PRFNamedFragment
protected class PRFNamedRefFirst_Group extends GroupToken {
	
	public PRFNamedRefFirst_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedRefFirstAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedRefFirst_PRFNamedFragmentParserRuleCall_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedRefFirstRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// ref=[PRFNamed]
protected class PRFNamedRefFirst_RefAssignment_0 extends AssignmentToken  {
	
	public PRFNamedRefFirst_RefAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedRefFirstAccess().getRefAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedRefFirstAccess().getRefPRFNamedCrossReference_0_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedRefFirstAccess().getRefPRFNamedCrossReference_0_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedRefFirstAccess().getRefPRFNamedCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "<-"
protected class PRFNamedRefFirst_LessThanSignHyphenMinusKeyword_1 extends KeywordToken  {
	
	public PRFNamedRefFirst_LessThanSignHyphenMinusKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPRFNamedRefFirstAccess().getLessThanSignHyphenMinusKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedRefFirst_RefAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// PRFNamedFragment
protected class PRFNamedRefFirst_PRFNamedFragmentParserRuleCall_2 extends RuleCallToken {
	
	public PRFNamedRefFirst_PRFNamedFragmentParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPRFNamedRefFirstAccess().getPRFNamedFragmentParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedFragment_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(PRFNamedFragment_NameAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedRefFirst_LessThanSignHyphenMinusKeyword_1(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}


/************ end Rule PRFNamedRefFirst ****************/


/************ begin Rule PRFNamedWithAction ****************
 *
 * PRFNamedWithAction returns PRFNamed:
 * 	PRFNamed {PRFNamedWithAction.prev=current} name=ID (ref=[PRFNamed] ref2=[PRFNamed])?;
 *
 **/

// PRFNamed {PRFNamedWithAction.prev=current} name=ID (ref=[PRFNamed] ref2=[PRFNamed])?
protected class PRFNamedWithAction_Group extends GroupToken {
	
	public PRFNamedWithAction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithAction_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PRFNamedWithAction_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedWithActionAccess().getPRFNamedWithActionPrevAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// PRFNamed
protected class PRFNamedWithAction_PRFNamedParserRuleCall_0 extends RuleCallToken {
	
	public PRFNamedWithAction_PRFNamedParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionAccess().getPRFNamedParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamed_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedRefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(PRFNamed_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// {PRFNamedWithAction.prev=current}
protected class PRFNamedWithAction_PRFNamedWithActionPrevAction_1 extends ActionToken  {

	public PRFNamedWithAction_PRFNamedWithActionPrevAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionAccess().getPRFNamedWithActionPrevAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithAction_PRFNamedParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		Object val = eObjectConsumer.getConsumable("prev", false);
		if(val == null) return null;
		if(!eObjectConsumer.isConsumedWithLastConsumtion("prev")) return null;
		return createEObjectConsumer((EObject) val);
	}
}

// name=ID
protected class PRFNamedWithAction_NameAssignment_2 extends AssignmentToken  {
	
	public PRFNamedWithAction_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithAction_PRFNamedWithActionPrevAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedWithActionAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPRFNamedWithActionAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// (ref=[PRFNamed] ref2=[PRFNamed])?
protected class PRFNamedWithAction_Group_3 extends GroupToken {
	
	public PRFNamedWithAction_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithAction_Ref2Assignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=[PRFNamed]
protected class PRFNamedWithAction_RefAssignment_3_0 extends AssignmentToken  {
	
	public PRFNamedWithAction_RefAssignment_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionAccess().getRefAssignment_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithAction_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionAccess().getRefPRFNamedCrossReference_3_0_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedWithActionAccess().getRefPRFNamedCrossReference_3_0_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedWithActionAccess().getRefPRFNamedCrossReference_3_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ref2=[PRFNamed]
protected class PRFNamedWithAction_Ref2Assignment_3_1 extends AssignmentToken  {
	
	public PRFNamedWithAction_Ref2Assignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionAccess().getRef2Assignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithAction_RefAssignment_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionAccess().getRef2PRFNamedCrossReference_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedWithActionAccess().getRef2PRFNamedCrossReference_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule PRFNamedWithAction ****************/


/************ begin Rule PRFNamedWithActionInFragment ****************
 *
 * PRFNamedWithActionInFragment returns PRFNamed:
 * 	FragmentWithAction ("-" ref=[PRFNamed])?;
 *
 **/

// FragmentWithAction ("-" ref=[PRFNamed])?
protected class PRFNamedWithActionInFragment_Group extends GroupToken {
	
	public PRFNamedWithActionInFragment_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragmentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PRFNamedWithActionInFragment_FragmentWithActionParserRuleCall_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFragmentWithActionAccess().getPRFNamedWithActionPrevAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// FragmentWithAction
protected class PRFNamedWithActionInFragment_FragmentWithActionParserRuleCall_0 extends RuleCallToken {
	
	public PRFNamedWithActionInFragment_FragmentWithActionParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragmentAccess().getFragmentWithActionParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FragmentWithAction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ("-" ref=[PRFNamed])?
protected class PRFNamedWithActionInFragment_Group_1 extends GroupToken {
	
	public PRFNamedWithActionInFragment_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragmentAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment_RefAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "-"
protected class PRFNamedWithActionInFragment_HyphenMinusKeyword_1_0 extends KeywordToken  {
	
	public PRFNamedWithActionInFragment_HyphenMinusKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragmentAccess().getHyphenMinusKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment_FragmentWithActionParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=[PRFNamed]
protected class PRFNamedWithActionInFragment_RefAssignment_1_1 extends AssignmentToken  {
	
	public PRFNamedWithActionInFragment_RefAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragmentAccess().getRefAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment_HyphenMinusKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionInFragmentAccess().getRefPRFNamedCrossReference_1_1_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedWithActionInFragmentAccess().getRefPRFNamedCrossReference_1_1_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedWithActionInFragmentAccess().getRefPRFNamedCrossReference_1_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule PRFNamedWithActionInFragment ****************/


/************ begin Rule PRFNamedWithActionInFragment2 ****************
 *
 * PRFNamedWithActionInFragment2 returns PRFNamed:
 * 	name=ID FragmentWithAction2 ("-" ref=[PRFNamed])?;
 *
 **/

// name=ID FragmentWithAction2 ("-" ref=[PRFNamed])?
protected class PRFNamedWithActionInFragment2_Group extends GroupToken {
	
	public PRFNamedWithActionInFragment2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment2_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PRFNamedWithActionInFragment2_FragmentWithAction2ParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedWithActionInFragment2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFragmentWithAction2Access().getPRFNamedWithActionPrevAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class PRFNamedWithActionInFragment2_NameAssignment_0 extends AssignmentToken  {
	
	public PRFNamedWithActionInFragment2_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment2Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedWithActionInFragment2Rule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedWithActionInFragment2Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPRFNamedWithActionInFragment2Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// FragmentWithAction2
protected class PRFNamedWithActionInFragment2_FragmentWithAction2ParserRuleCall_1 extends RuleCallToken {
	
	public PRFNamedWithActionInFragment2_FragmentWithAction2ParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment2Access().getFragmentWithAction2ParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FragmentWithAction2_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment2_NameAssignment_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}

// ("-" ref=[PRFNamed])?
protected class PRFNamedWithActionInFragment2_Group_2 extends GroupToken {
	
	public PRFNamedWithActionInFragment2_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment2Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment2_RefAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "-"
protected class PRFNamedWithActionInFragment2_HyphenMinusKeyword_2_0 extends KeywordToken  {
	
	public PRFNamedWithActionInFragment2_HyphenMinusKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment2Access().getHyphenMinusKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment2_FragmentWithAction2ParserRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=[PRFNamed]
protected class PRFNamedWithActionInFragment2_RefAssignment_2_1 extends AssignmentToken  {
	
	public PRFNamedWithActionInFragment2_RefAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment2Access().getRefAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment2_HyphenMinusKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionInFragment2Access().getRefPRFNamedCrossReference_2_1_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedWithActionInFragment2Access().getRefPRFNamedCrossReference_2_1_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedWithActionInFragment2Access().getRefPRFNamedCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule PRFNamedWithActionInFragment2 ****************/


/************ begin Rule PRFNamedWithActionInFragment3 ****************
 *
 * PRFNamedWithActionInFragment3 returns PRFNamed:
 * 	FragmentWithAction3 ("-" ref=[PRFNamed])?;
 *
 **/

// FragmentWithAction3 ("-" ref=[PRFNamed])?
protected class PRFNamedWithActionInFragment3_Group extends GroupToken {
	
	public PRFNamedWithActionInFragment3_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment3Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment3_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PRFNamedWithActionInFragment3_FragmentWithAction3ParserRuleCall_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFragmentWithAction3Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFragmentWithAction3Access().getPRFNamedWithActionPrevAction_1_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// FragmentWithAction3
protected class PRFNamedWithActionInFragment3_FragmentWithAction3ParserRuleCall_0 extends RuleCallToken {
	
	public PRFNamedWithActionInFragment3_FragmentWithAction3ParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment3Access().getFragmentWithAction3ParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(FragmentWithAction3_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ("-" ref=[PRFNamed])?
protected class PRFNamedWithActionInFragment3_Group_1 extends GroupToken {
	
	public PRFNamedWithActionInFragment3_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment3Access().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment3_RefAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "-"
protected class PRFNamedWithActionInFragment3_HyphenMinusKeyword_1_0 extends KeywordToken  {
	
	public PRFNamedWithActionInFragment3_HyphenMinusKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment3Access().getHyphenMinusKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment3_FragmentWithAction3ParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=[PRFNamed]
protected class PRFNamedWithActionInFragment3_RefAssignment_1_1 extends AssignmentToken  {
	
	public PRFNamedWithActionInFragment3_RefAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithActionInFragment3Access().getRefAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithActionInFragment3_HyphenMinusKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithActionInFragment3Access().getRefPRFNamedCrossReference_1_1_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedWithActionInFragment3Access().getRefPRFNamedCrossReference_1_1_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedWithActionInFragment3Access().getRefPRFNamedCrossReference_1_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule PRFNamedWithActionInFragment3 ****************/


/************ begin Rule PRFNamedWithFQN ****************
 *
 * PRFNamedWithFQN returns PRFNamed:
 * 	name=FQN ("-" ref=[PRFNamed|FQN2])?;
 *
 **/

// name=FQN ("-" ref=[PRFNamed|FQN2])?
protected class PRFNamedWithFQN_Group extends GroupToken {
	
	public PRFNamedWithFQN_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithFQNAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithFQN_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PRFNamedWithFQN_NameAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedWithFQNRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=FQN
protected class PRFNamedWithFQN_NameAssignment_0 extends AssignmentToken  {
	
	public PRFNamedWithFQN_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithFQNAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedWithFQNAccess().getNameFQNParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPRFNamedWithFQNAccess().getNameFQNParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ("-" ref=[PRFNamed|FQN2])?
protected class PRFNamedWithFQN_Group_1 extends GroupToken {
	
	public PRFNamedWithFQN_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPRFNamedWithFQNAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithFQN_RefAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "-"
protected class PRFNamedWithFQN_HyphenMinusKeyword_1_0 extends KeywordToken  {
	
	public PRFNamedWithFQN_HyphenMinusKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPRFNamedWithFQNAccess().getHyphenMinusKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithFQN_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=[PRFNamed|FQN2]
protected class PRFNamedWithFQN_RefAssignment_1_1 extends AssignmentToken  {
	
	public PRFNamedWithFQN_RefAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedWithFQNAccess().getRefAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PRFNamedWithFQN_HyphenMinusKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedWithFQNAccess().getRefPRFNamedCrossReference_1_1_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedWithFQNAccess().getRefPRFNamedCrossReference_1_1_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedWithFQNAccess().getRefPRFNamedCrossReference_1_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule PRFNamedWithFQN ****************/






/************ begin Rule FragmentWithAction ****************
 *
 * fragment FragmentWithAction returns PRFNamed:
 * 	name=ID {PRFNamedWithAction.prev=current} name=ID ref2=[PRFNamed]?;
 *
 **/

// name=ID {PRFNamedWithAction.prev=current} name=ID ref2=[PRFNamed]?
protected class FragmentWithAction_Group extends GroupToken {
	
	public FragmentWithAction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFragmentWithActionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction_Ref2Assignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FragmentWithAction_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFragmentWithActionAccess().getPRFNamedWithActionPrevAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class FragmentWithAction_NameAssignment_0 extends AssignmentToken  {
	
	public FragmentWithAction_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFragmentWithActionAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFragmentWithActionRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFragmentWithActionAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFragmentWithActionAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// {PRFNamedWithAction.prev=current}
protected class FragmentWithAction_PRFNamedWithActionPrevAction_1 extends ActionToken  {

	public FragmentWithAction_PRFNamedWithActionPrevAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getFragmentWithActionAccess().getPRFNamedWithActionPrevAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		Object val = eObjectConsumer.getConsumable("prev", false);
		if(val == null) return null;
		if(!eObjectConsumer.isConsumedWithLastConsumtion("prev")) return null;
		return createEObjectConsumer((EObject) val);
	}
}

// name=ID
protected class FragmentWithAction_NameAssignment_2 extends AssignmentToken  {
	
	public FragmentWithAction_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFragmentWithActionAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction_PRFNamedWithActionPrevAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFragmentWithActionAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFragmentWithActionAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ref2=[PRFNamed]?
protected class FragmentWithAction_Ref2Assignment_3 extends AssignmentToken  {
	
	public FragmentWithAction_Ref2Assignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFragmentWithActionAccess().getRef2Assignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFragmentWithActionAccess().getRef2PRFNamedCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFragmentWithActionAccess().getRef2PRFNamedCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule FragmentWithAction ****************/


/************ begin Rule FragmentWithAction2 ****************
 *
 * fragment FragmentWithAction2 returns PRFNamed:
 * 	{PRFNamedWithAction.prev=current} name=ID ref2=[PRFNamed]?;
 *
 **/

// {PRFNamedWithAction.prev=current} name=ID ref2=[PRFNamed]?
protected class FragmentWithAction2_Group extends GroupToken {
	
	public FragmentWithAction2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFragmentWithAction2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction2_Ref2Assignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FragmentWithAction2_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFragmentWithAction2Access().getPRFNamedWithActionPrevAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {PRFNamedWithAction.prev=current}
protected class FragmentWithAction2_PRFNamedWithActionPrevAction_0 extends ActionToken  {

	public FragmentWithAction2_PRFNamedWithActionPrevAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getFragmentWithAction2Access().getPRFNamedWithActionPrevAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		Object val = eObjectConsumer.getConsumable("prev", false);
		if(val == null) return null;
		if(!eObjectConsumer.isConsumedWithLastConsumtion("prev")) return null;
		return createEObjectConsumer((EObject) val);
	}
}

// name=ID
protected class FragmentWithAction2_NameAssignment_1 extends AssignmentToken  {
	
	public FragmentWithAction2_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFragmentWithAction2Access().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction2_PRFNamedWithActionPrevAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFragmentWithAction2Access().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFragmentWithAction2Access().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ref2=[PRFNamed]?
protected class FragmentWithAction2_Ref2Assignment_2 extends AssignmentToken  {
	
	public FragmentWithAction2_Ref2Assignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFragmentWithAction2Access().getRef2Assignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction2_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFragmentWithAction2Access().getRef2PRFNamedCrossReference_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFragmentWithAction2Access().getRef2PRFNamedCrossReference_2_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule FragmentWithAction2 ****************/


/************ begin Rule FragmentWithAction3 ****************
 *
 * fragment FragmentWithAction3 returns PRFNamed:
 * 	name=ID ({PRFNamedWithAction.prev=current} "->" name=ID ref2=[PRFNamed]?)*;
 *
 **/

// name=ID ({PRFNamedWithAction.prev=current} "->" name=ID ref2=[PRFNamed]?)*
protected class FragmentWithAction3_Group extends GroupToken {
	
	public FragmentWithAction3_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFragmentWithAction3Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction3_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FragmentWithAction3_NameAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFragmentWithAction3Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFragmentWithAction3Access().getPRFNamedWithActionPrevAction_1_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class FragmentWithAction3_NameAssignment_0 extends AssignmentToken  {
	
	public FragmentWithAction3_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFragmentWithAction3Access().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFragmentWithAction3Rule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFragmentWithAction3Access().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFragmentWithAction3Access().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ({PRFNamedWithAction.prev=current} "->" name=ID ref2=[PRFNamed]?)*
protected class FragmentWithAction3_Group_1 extends GroupToken {
	
	public FragmentWithAction3_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFragmentWithAction3Access().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction3_Ref2Assignment_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FragmentWithAction3_NameAssignment_1_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFragmentWithAction3Access().getPRFNamedWithActionPrevAction_1_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {PRFNamedWithAction.prev=current}
protected class FragmentWithAction3_PRFNamedWithActionPrevAction_1_0 extends ActionToken  {

	public FragmentWithAction3_PRFNamedWithActionPrevAction_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getFragmentWithAction3Access().getPRFNamedWithActionPrevAction_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction3_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FragmentWithAction3_NameAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		Object val = eObjectConsumer.getConsumable("prev", false);
		if(val == null) return null;
		if(!eObjectConsumer.isConsumedWithLastConsumtion("prev")) return null;
		return createEObjectConsumer((EObject) val);
	}
}

// "->"
protected class FragmentWithAction3_HyphenMinusGreaterThanSignKeyword_1_1 extends KeywordToken  {
	
	public FragmentWithAction3_HyphenMinusGreaterThanSignKeyword_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFragmentWithAction3Access().getHyphenMinusGreaterThanSignKeyword_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction3_PRFNamedWithActionPrevAction_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class FragmentWithAction3_NameAssignment_1_2 extends AssignmentToken  {
	
	public FragmentWithAction3_NameAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFragmentWithAction3Access().getNameAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction3_HyphenMinusGreaterThanSignKeyword_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFragmentWithAction3Access().getNameIDTerminalRuleCall_1_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFragmentWithAction3Access().getNameIDTerminalRuleCall_1_2_0();
			return obj;
		}
		return null;
	}

}

// ref2=[PRFNamed]?
protected class FragmentWithAction3_Ref2Assignment_1_3 extends AssignmentToken  {
	
	public FragmentWithAction3_Ref2Assignment_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFragmentWithAction3Access().getRef2Assignment_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FragmentWithAction3_NameAssignment_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref2");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFragmentWithAction3Access().getRef2PRFNamedCrossReference_1_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getFragmentWithAction3Access().getRef2PRFNamedCrossReference_1_3_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule FragmentWithAction3 ****************/


/************ begin Rule PRFNamedFragment ****************
 *
 * fragment PRFNamedFragment returns PRFNamed:
 * 	name=ID;
 *
 **/

// name=ID
protected class PRFNamedFragment_NameAssignment extends AssignmentToken  {
	
	public PRFNamedFragment_NameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedFragmentAccess().getNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedFragmentRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedFragmentAccess().getNameIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPRFNamedFragmentAccess().getNameIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule PRFNamedFragment ****************/


/************ begin Rule PRFNamedRef ****************
 *
 * fragment PRFNamedRef returns PRFNamed:
 * 	ref=[PRFNamed];
 *
 **/

// ref=[PRFNamed]
protected class PRFNamedRef_RefAssignment extends AssignmentToken  {
	
	public PRFNamedRef_RefAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPRFNamedRefAccess().getRefAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPRFNamedRefRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPRFNamedRefAccess().getRefPRFNamedCrossReference_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getPRFNamedRefAccess().getRefPRFNamedCrossReference_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPRFNamedRefAccess().getRefPRFNamedCrossReference_0(); 
				return obj;
			}
		}
		return null;
	}

}

/************ end Rule PRFNamedRef ****************/

}
