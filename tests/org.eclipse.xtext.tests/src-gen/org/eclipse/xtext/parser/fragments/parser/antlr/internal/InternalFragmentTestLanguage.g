/*
 * generated by Xtext
 */
grammar InternalFragmentTestLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.xtext.parser.fragments.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.parser.fragments.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.parser.fragments.services.FragmentTestLanguageGrammarAccess;

}

@parser::members {

 	private FragmentTestLanguageGrammarAccess grammarAccess;
 	
    public InternalFragmentTestLanguageParser(TokenStream input, FragmentTestLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ParserRuleFragments";	
   	}
   	
   	@Override
   	protected FragmentTestLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleParserRuleFragments
entryRuleParserRuleFragments returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParserRuleFragmentsRule()); }
	 iv_ruleParserRuleFragments=ruleParserRuleFragments 
	 { $current=$iv_ruleParserRuleFragments.current; } 
	 EOF 
;

// Rule ParserRuleFragments
ruleParserRuleFragments returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParserRuleFragmentsAccess().getParserRuleFragmentsAction_0(),
            $current);
    }
)((	otherlv_1='#1' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitOneKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedParserRuleCall_1_0_1_0()); 
	    }
		lv_element_2_0=rulePRFNamed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_2_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.PRFNamed");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='#2' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitTwoKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedParserRuleCall_1_1_1_0()); 
	    }
		lv_element_4_0=rulePRFNamed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.PRFNamed");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getParserRuleFragmentsAccess().getHyphenMinusGreaterThanSignKeyword_1_1_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParserRuleFragmentsRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getParserRuleFragmentsAccess().getRefPRFNamedCrossReference_1_1_3_0()); 
	}

)
))
    |(	otherlv_7='#3' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitThreeKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedRefFirstParserRuleCall_1_2_1_0()); 
	    }
		lv_element_8_0=rulePRFNamedRefFirst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_8_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.PRFNamedRefFirst");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_9='#4' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitFourKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithActionParserRuleCall_1_3_1_0()); 
	    }
		lv_element_10_0=rulePRFNamedWithAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_10_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.PRFNamedWithAction");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_11='#5' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitFiveKeyword_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithActionInFragmentParserRuleCall_1_4_1_0()); 
	    }
		lv_element_12_0=rulePRFNamedWithActionInFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_12_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.PRFNamedWithActionInFragment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_13='#6' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitSixKeyword_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithActionInFragment2ParserRuleCall_1_5_1_0()); 
	    }
		lv_element_14_0=rulePRFNamedWithActionInFragment2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_14_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.PRFNamedWithActionInFragment2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_15='#7' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitSevenKeyword_1_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithActionInFragment3ParserRuleCall_1_6_1_0()); 
	    }
		lv_element_16_0=rulePRFNamedWithActionInFragment3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_16_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.PRFNamedWithActionInFragment3");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_17='#8' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getParserRuleFragmentsAccess().getNumberSignDigitEightKeyword_1_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParserRuleFragmentsAccess().getElementPRFNamedWithFQNParserRuleCall_1_7_1_0()); 
	    }
		lv_element_18_0=rulePRFNamedWithFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParserRuleFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_18_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.PRFNamedWithFQN");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRulePRFNamed
entryRulePRFNamed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPRFNamedRule()); }
	 iv_rulePRFNamed=rulePRFNamed 
	 { $current=$iv_rulePRFNamed.current; } 
	 EOF 
;

// Rule PRFNamed
rulePRFNamed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getPRFNamedRule());
		}
        newCompositeNode(grammarAccess.getPRFNamedAccess().getPRFNamedFragmentParserRuleCall_0()); 
    }
    this_PRFNamedFragment_0=rulePRFNamedFragment[$current]
    { 
        $current = $this_PRFNamedFragment_0.current; 
        afterParserOrEnumRuleCall();
    }
((	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPRFNamedAccess().getColonKeyword_1_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getPRFNamedAccess().getRefPRFNamedCrossReference_1_0_1_0()); 
	}

)
))
    |(	otherlv_3='-' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPRFNamedAccess().getHyphenMinusKeyword_1_1_0());
    }

    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getPRFNamedRule());
		}
        newCompositeNode(grammarAccess.getPRFNamedAccess().getPRFNamedRefParserRuleCall_1_1_1()); 
    }
    this_PRFNamedRef_4=rulePRFNamedRef[$current]
    { 
        $current = $this_PRFNamedRef_4.current; 
        afterParserOrEnumRuleCall();
    }
))?)
;





// Entry rule entryRulePRFNamedRefFirst
entryRulePRFNamedRefFirst returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPRFNamedRefFirstRule()); }
	 iv_rulePRFNamedRefFirst=rulePRFNamedRefFirst 
	 { $current=$iv_rulePRFNamedRefFirst.current; } 
	 EOF 
;

// Rule PRFNamedRefFirst
rulePRFNamedRefFirst returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedRefFirstRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPRFNamedRefFirstAccess().getRefPRFNamedCrossReference_0_0()); 
	}

)
)	otherlv_1='<-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPRFNamedRefFirstAccess().getLessThanSignHyphenMinusKeyword_1());
    }

    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getPRFNamedRefFirstRule());
		}
        newCompositeNode(grammarAccess.getPRFNamedRefFirstAccess().getPRFNamedFragmentParserRuleCall_2()); 
    }
    this_PRFNamedFragment_2=rulePRFNamedFragment[$current]
    { 
        $current = $this_PRFNamedFragment_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePRFNamedWithAction
entryRulePRFNamedWithAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPRFNamedWithActionRule()); }
	 iv_rulePRFNamedWithAction=rulePRFNamedWithAction 
	 { $current=$iv_rulePRFNamedWithAction.current; } 
	 EOF 
;

// Rule PRFNamedWithAction
rulePRFNamedWithAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPRFNamedWithActionAccess().getPRFNamedParserRuleCall_0()); 
    }
    this_PRFNamed_0=rulePRFNamed
    { 
        $current = $this_PRFNamed_0.current; 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPRFNamedWithActionAccess().getPRFNamedWithActionPrevAction_1(),
            $current);
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPRFNamedWithActionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedWithActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedWithActionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getPRFNamedWithActionAccess().getRefPRFNamedCrossReference_3_0_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedWithActionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getPRFNamedWithActionAccess().getRef2PRFNamedCrossReference_3_1_0()); 
	}

)
))?)
;





// Entry rule entryRulePRFNamedWithActionInFragment
entryRulePRFNamedWithActionInFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPRFNamedWithActionInFragmentRule()); }
	 iv_rulePRFNamedWithActionInFragment=rulePRFNamedWithActionInFragment 
	 { $current=$iv_rulePRFNamedWithActionInFragment.current; } 
	 EOF 
;

// Rule PRFNamedWithActionInFragment
rulePRFNamedWithActionInFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getPRFNamedWithActionInFragmentRule());
		}
        newCompositeNode(grammarAccess.getPRFNamedWithActionInFragmentAccess().getFragmentWithActionParserRuleCall_0()); 
    }
    this_FragmentWithAction_0=ruleFragmentWithAction[$current]
    { 
        $current = $this_FragmentWithAction_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPRFNamedWithActionInFragmentAccess().getHyphenMinusKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedWithActionInFragmentRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getPRFNamedWithActionInFragmentAccess().getRefPRFNamedCrossReference_1_1_0()); 
	}

)
))?)
;





// Entry rule entryRulePRFNamedWithActionInFragment2
entryRulePRFNamedWithActionInFragment2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPRFNamedWithActionInFragment2Rule()); }
	 iv_rulePRFNamedWithActionInFragment2=rulePRFNamedWithActionInFragment2 
	 { $current=$iv_rulePRFNamedWithActionInFragment2.current; } 
	 EOF 
;

// Rule PRFNamedWithActionInFragment2
rulePRFNamedWithActionInFragment2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPRFNamedWithActionInFragment2Access().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedWithActionInFragment2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)
    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getPRFNamedWithActionInFragment2Rule());
		}
        newCompositeNode(grammarAccess.getPRFNamedWithActionInFragment2Access().getFragmentWithAction2ParserRuleCall_1()); 
    }
    this_FragmentWithAction2_1=ruleFragmentWithAction2[$current]
    { 
        $current = $this_FragmentWithAction2_1.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_2='-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPRFNamedWithActionInFragment2Access().getHyphenMinusKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedWithActionInFragment2Rule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getPRFNamedWithActionInFragment2Access().getRefPRFNamedCrossReference_2_1_0()); 
	}

)
))?)
;





// Entry rule entryRulePRFNamedWithActionInFragment3
entryRulePRFNamedWithActionInFragment3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPRFNamedWithActionInFragment3Rule()); }
	 iv_rulePRFNamedWithActionInFragment3=rulePRFNamedWithActionInFragment3 
	 { $current=$iv_rulePRFNamedWithActionInFragment3.current; } 
	 EOF 
;

// Rule PRFNamedWithActionInFragment3
rulePRFNamedWithActionInFragment3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getPRFNamedWithActionInFragment3Rule());
		}
        newCompositeNode(grammarAccess.getPRFNamedWithActionInFragment3Access().getFragmentWithAction3ParserRuleCall_0()); 
    }
    this_FragmentWithAction3_0=ruleFragmentWithAction3[$current]
    { 
        $current = $this_FragmentWithAction3_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPRFNamedWithActionInFragment3Access().getHyphenMinusKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedWithActionInFragment3Rule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getPRFNamedWithActionInFragment3Access().getRefPRFNamedCrossReference_1_1_0()); 
	}

)
))?)
;





// Entry rule entryRulePRFNamedWithFQN
entryRulePRFNamedWithFQN returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPRFNamedWithFQNRule()); }
	 iv_rulePRFNamedWithFQN=rulePRFNamedWithFQN 
	 { $current=$iv_rulePRFNamedWithFQN.current; } 
	 EOF 
;

// Rule PRFNamedWithFQN
rulePRFNamedWithFQN returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPRFNamedWithFQNAccess().getNameFQNParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPRFNamedWithFQNRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.parser.fragments.FragmentTestLanguage.FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPRFNamedWithFQNAccess().getHyphenMinusKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedWithFQNRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPRFNamedWithFQNAccess().getRefPRFNamedCrossReference_1_1_0()); 
	    }
		ruleFQN2		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getFQNAccess().getSuffixParserRuleCall_1()); 
    }
    this_Suffix_1=ruleSuffix    {
		$current.merge(this_Suffix_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    ;





// Entry rule entryRuleFQN2
entryRuleFQN2 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQN2Rule()); } 
	 iv_ruleFQN2=ruleFQN2 
	 { $current=$iv_ruleFQN2.current.getText(); }  
	 EOF 
;

// Rule FQN2
ruleFQN2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQN2Access().getIDTerminalRuleCall_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getFQN2Access().getSuffix2ParserRuleCall_1()); 
    }
    this_Suffix2_1=ruleSuffix2    {
		$current.merge(this_Suffix2_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;






// Rule Suffix
ruleSuffix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSuffixAccess().getFullStopKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getSuffixAccess().getIDTerminalRuleCall_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getSuffixAccess().getSuffixParserRuleCall_2()); 
    }
    this_Suffix_2=ruleSuffix    {
		$current.merge(this_Suffix_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    ;






// Rule Suffix2
ruleSuffix2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSuffix2Access().getFullStopKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getSuffix2Access().getIDTerminalRuleCall_1()); 
    }
)
    ;






// Rule FragmentWithAction
ruleFragmentWithAction [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFragmentWithActionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFragmentWithActionAccess().getPRFNamedWithActionPrevAction_1(),
            $current);
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFragmentWithActionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithActionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getFragmentWithActionAccess().getRef2PRFNamedCrossReference_3_0()); 
	}

)
)?)
;






// Rule FragmentWithAction2
ruleFragmentWithAction2 [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFragmentWithAction2Access().getPRFNamedWithActionPrevAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFragmentWithAction2Access().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction2Rule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getFragmentWithAction2Access().getRef2PRFNamedCrossReference_2_0()); 
	}

)
)?)
;






// Rule FragmentWithAction3
ruleFragmentWithAction3 [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFragmentWithAction3Access().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction3Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFragmentWithAction3Access().getPRFNamedWithActionPrevAction_1_0(),
            $current);
    }
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFragmentWithAction3Access().getHyphenMinusGreaterThanSignKeyword_1_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getFragmentWithAction3Access().getNameIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction3Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction3Rule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getFragmentWithAction3Access().getRef2PRFNamedCrossReference_1_3_0()); 
	}

)
)?)*)
;






// Rule PRFNamedFragment
rulePRFNamedFragment [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPRFNamedFragmentAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedFragmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)
;






// Rule PRFNamedRef
rulePRFNamedRef [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPRFNamedRefRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPRFNamedRefAccess().getRefPRFNamedCrossReference_0()); 
	}

)
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


