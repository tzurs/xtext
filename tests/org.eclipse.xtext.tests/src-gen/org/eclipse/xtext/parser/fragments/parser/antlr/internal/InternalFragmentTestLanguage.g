/*
 * generated by Xtext
 */
grammar InternalFragmentTestLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.xtext.parser.fragments.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.xtext.parser.fragments.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.parser.fragments.services.FragmentTestLanguageGrammarAccess;

}

@parser::members {

 	private FragmentTestLanguageGrammarAccess grammarAccess;
 	
    public InternalFragmentTestLanguageParser(TokenStream input, FragmentTestLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Fragments";	
   	}
   	
   	@Override
   	protected FragmentTestLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleFragments
entryRuleFragments returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFragmentsRule()); }
	 iv_ruleFragments=ruleFragments 
	 { $current=$iv_ruleFragments.current; } 
	 EOF 
;

// Rule Fragments
ruleFragments returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFragmentsAccess().getFragmentsAction_0(),
            $current);
    }
)((	otherlv_1='#1' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFragmentsAccess().getNumberSignDigitOneKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFragmentsAccess().getElementNamedParserRuleCall_1_0_1_0()); 
	    }
		lv_element_2_0=ruleNamed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_2_0, 
        		"Named");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='#2' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFragmentsAccess().getNumberSignDigitTwoKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFragmentsAccess().getElementNamedParserRuleCall_1_1_1_0()); 
	    }
		lv_element_4_0=ruleNamed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"Named");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFragmentsAccess().getHyphenMinusGreaterThanSignKeyword_1_1_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentsRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getFragmentsAccess().getRefNamedCrossReference_1_1_3_0()); 
	}

)
))
    |(	otherlv_7='#3' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFragmentsAccess().getNumberSignDigitThreeKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFragmentsAccess().getElementNamedRefFirstParserRuleCall_1_2_1_0()); 
	    }
		lv_element_8_0=ruleNamedRefFirst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_8_0, 
        		"NamedRefFirst");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_9='#4' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFragmentsAccess().getNumberSignDigitFourKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFragmentsAccess().getElementNamedWithActionParserRuleCall_1_3_1_0()); 
	    }
		lv_element_10_0=ruleNamedWithAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_10_0, 
        		"NamedWithAction");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_11='#5' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFragmentsAccess().getNumberSignDigitFiveKeyword_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFragmentsAccess().getElementNamedWithActionInFragmentParserRuleCall_1_4_1_0()); 
	    }
		lv_element_12_0=ruleNamedWithActionInFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_12_0, 
        		"NamedWithActionInFragment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_13='#6' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFragmentsAccess().getNumberSignDigitSixKeyword_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFragmentsAccess().getElementNamedWithActionInFragment2ParserRuleCall_1_5_1_0()); 
	    }
		lv_element_14_0=ruleNamedWithActionInFragment2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_14_0, 
        		"NamedWithActionInFragment2");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_15='#7' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFragmentsAccess().getNumberSignDigitSevenKeyword_1_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFragmentsAccess().getElementNamedWithActionInFragment3ParserRuleCall_1_6_1_0()); 
	    }
		lv_element_16_0=ruleNamedWithActionInFragment3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFragmentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_16_0, 
        		"NamedWithActionInFragment3");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleNamed
entryRuleNamed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedRule()); }
	 iv_ruleNamed=ruleNamed 
	 { $current=$iv_ruleNamed.current; } 
	 EOF 
;

// Rule Named
ruleNamed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getNamedRule());
		}
        newCompositeNode(grammarAccess.getNamedAccess().getNamedFragmentParserRuleCall_0()); 
    }
    this_NamedFragment_0=ruleNamedFragment[$current]
    { 
        $current = $this_NamedFragment_0.current; 
        afterParserOrEnumRuleCall();
    }
((	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedAccess().getColonKeyword_1_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getNamedAccess().getRefNamedCrossReference_1_0_1_0()); 
	}

)
))
    |(	otherlv_3='-' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNamedAccess().getHyphenMinusKeyword_1_1_0());
    }

    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getNamedRule());
		}
        newCompositeNode(grammarAccess.getNamedAccess().getNamedRefParserRuleCall_1_1_1()); 
    }
    this_NamedRef_4=ruleNamedRef[$current]
    { 
        $current = $this_NamedRef_4.current; 
        afterParserOrEnumRuleCall();
    }
))?)
;





// Entry rule entryRuleNamedRefFirst
entryRuleNamedRefFirst returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedRefFirstRule()); }
	 iv_ruleNamedRefFirst=ruleNamedRefFirst 
	 { $current=$iv_ruleNamedRefFirst.current; } 
	 EOF 
;

// Rule NamedRefFirst
ruleNamedRefFirst returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedRefFirstRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getNamedRefFirstAccess().getRefNamedCrossReference_0_0()); 
	}

)
)	otherlv_1='<-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedRefFirstAccess().getLessThanSignHyphenMinusKeyword_1());
    }

    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getNamedRefFirstRule());
		}
        newCompositeNode(grammarAccess.getNamedRefFirstAccess().getNamedFragmentParserRuleCall_2()); 
    }
    this_NamedFragment_2=ruleNamedFragment[$current]
    { 
        $current = $this_NamedFragment_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNamedWithAction
entryRuleNamedWithAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedWithActionRule()); }
	 iv_ruleNamedWithAction=ruleNamedWithAction 
	 { $current=$iv_ruleNamedWithAction.current; } 
	 EOF 
;

// Rule NamedWithAction
ruleNamedWithAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNamedWithActionAccess().getNamedParserRuleCall_0()); 
    }
    this_Named_0=ruleNamed
    { 
        $current = $this_Named_0.current; 
        afterParserOrEnumRuleCall();
    }
(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getNamedWithActionAccess().getNamedWithActionPrevAction_1(),
            $current);
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getNamedWithActionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedWithActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedWithActionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getNamedWithActionAccess().getRefNamedCrossReference_3_0_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedWithActionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getNamedWithActionAccess().getRef2NamedCrossReference_3_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleNamedWithActionInFragment
entryRuleNamedWithActionInFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedWithActionInFragmentRule()); }
	 iv_ruleNamedWithActionInFragment=ruleNamedWithActionInFragment 
	 { $current=$iv_ruleNamedWithActionInFragment.current; } 
	 EOF 
;

// Rule NamedWithActionInFragment
ruleNamedWithActionInFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getNamedWithActionInFragmentRule());
		}
        newCompositeNode(grammarAccess.getNamedWithActionInFragmentAccess().getFragmentWithActionParserRuleCall_0()); 
    }
    this_FragmentWithAction_0=ruleFragmentWithAction[$current]
    { 
        $current = $this_FragmentWithAction_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedWithActionInFragmentAccess().getHyphenMinusKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedWithActionInFragmentRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getNamedWithActionInFragmentAccess().getRefNamedCrossReference_1_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleNamedWithActionInFragment2
entryRuleNamedWithActionInFragment2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedWithActionInFragment2Rule()); }
	 iv_ruleNamedWithActionInFragment2=ruleNamedWithActionInFragment2 
	 { $current=$iv_ruleNamedWithActionInFragment2.current; } 
	 EOF 
;

// Rule NamedWithActionInFragment2
ruleNamedWithActionInFragment2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getNamedWithActionInFragment2Access().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedWithActionInFragment2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getNamedWithActionInFragment2Rule());
		}
        newCompositeNode(grammarAccess.getNamedWithActionInFragment2Access().getFragmentWithAction2ParserRuleCall_1()); 
    }
    this_FragmentWithAction2_1=ruleFragmentWithAction2[$current]
    { 
        $current = $this_FragmentWithAction2_1.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_2='-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNamedWithActionInFragment2Access().getHyphenMinusKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedWithActionInFragment2Rule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getNamedWithActionInFragment2Access().getRefNamedCrossReference_2_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleNamedWithActionInFragment3
entryRuleNamedWithActionInFragment3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedWithActionInFragment3Rule()); }
	 iv_ruleNamedWithActionInFragment3=ruleNamedWithActionInFragment3 
	 { $current=$iv_ruleNamedWithActionInFragment3.current; } 
	 EOF 
;

// Rule NamedWithActionInFragment3
ruleNamedWithActionInFragment3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
		if ($current==null) {
			$current = createModelElement(grammarAccess.getNamedWithActionInFragment3Rule());
		}
        newCompositeNode(grammarAccess.getNamedWithActionInFragment3Access().getFragmentWithAction3ParserRuleCall_0()); 
    }
    this_FragmentWithAction3_0=ruleFragmentWithAction3[$current]
    { 
        $current = $this_FragmentWithAction3_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedWithActionInFragment3Access().getHyphenMinusKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedWithActionInFragment3Rule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getNamedWithActionInFragment3Access().getRefNamedCrossReference_1_1_0()); 
	}

)
))?)
;






// Rule FragmentWithAction
ruleFragmentWithAction [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFragmentWithActionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFragmentWithActionAccess().getNamedWithActionPrevAction_1(),
            $current);
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFragmentWithActionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithActionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getFragmentWithActionAccess().getRef2NamedCrossReference_3_0()); 
	}

)
)?)
;






// Rule FragmentWithAction2
ruleFragmentWithAction2 [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFragmentWithAction2Access().getNamedWithActionPrevAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFragmentWithAction2Access().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction2Rule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getFragmentWithAction2Access().getRef2NamedCrossReference_2_0()); 
	}

)
)?)
;






// Rule FragmentWithAction3
ruleFragmentWithAction3 [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFragmentWithAction3Access().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction3Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFragmentWithAction3Access().getNamedWithActionPrevAction_1_0(),
            $current);
    }
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFragmentWithAction3Access().getHyphenMinusGreaterThanSignKeyword_1_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getFragmentWithAction3Access().getNameIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction3Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFragmentWithAction3Rule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getFragmentWithAction3Access().getRef2NamedCrossReference_1_3_0()); 
	}

)
)?)*)
;






// Rule NamedFragment
ruleNamedFragment [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getNamedFragmentAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedFragmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;






// Rule NamedRef
ruleNamedRef [EObject in_current] returns [EObject current=in_current] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedRefRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getNamedRefAccess().getRefNamedCrossReference_0()); 
	}

)
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


